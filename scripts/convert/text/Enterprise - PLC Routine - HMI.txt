This provides the .l5k program export overview of HMI routine within the PLC from the HS5160 machine from Kliklok-Woodman, a Enterprise Endload Cartoner. Use this program to understand the logic so that it can be queried in the future. What will often be asked is information about why a program may not be working, so this document provides the information necessary to answer this.
(MAIN := "R00_Main",
	             MODE := 0,
	             DisableFlag := 0,
	             UseAsFolder := 0)
		TAG
					END_TAG

		ROUTINE R00_Main 
				N: JSR(R01_Messages,0);
				N: JSR(R02_mmUnits,0);
				N: JSR(R03_InchUnits,0);
				N: JSR(R05_MinMax,0);
				N: JSR(R06_General_Logic,0);
				N: JSR(R07_Stats,0);
				N: JSR(R09_RecipeCheckList,0);
				N: JSR(R10_MachineSetup,0);
		END_ROUTINE

		ROUTINE R01_Messages 
				N: XIC(AlwaysOff)OTE(Message_Num[0]);
				N: XIC(PML_State.Sts_Stopping)OTE(Message_Num[1]);
				N: XIC(PML_State.Sts_Stopped)OTE(Message_Num[2]);
				N: XIC(PML_State.Sts_Starting)OTE(Message_Num[3]);
				N: XIC(PML_State.Sts_Idle)OTE(Message_Num[4]);
				N: XIC(PML_State.Sts_Execute)OTE(Message_Num[5]);
				N: XIC(PML_State.Sts_Suspended)OTE(Message_Num[6]);
				N: XIC(PML_State.Sts_Aborting)OTE(Message_Num[7]);
				N: XIC(PML_State.Sts_Aborted)OTE(Message_Num[8]);
				N: XIC(Paused)OTE(Message_Num[9]);
				N: XIO(Message_delay)[ADD(Message_index,1,Message_index) ,GEQ(Message_index,200) MOV(0,Message_index) ];
				N: XIC(Message_Num[Message_index])XIO(Message_delay)LES(Message_index,100)MOV(Message_index,DisplayMessageNum)OTL(Message_delay);
				N: XIC(FaultPresent)XIO(Message_delay)GEQ(Message_index,100)SUB(Message_index,100,error_message_index)XIC(ErrorNum[error_message_index])MOV(Message_index,DisplayMessageNum)OTL(Message_delay);
				N: XIC(Message_delay)TON(Message_delay_Timer,?,?)XIC(Message_delay_Timer.DN)OTU(Message_delay);
				N: LEQ(CurrentRecipe.MachineSpeed_CPM,29)MOV(30,CurrentRecipe.MachineSpeed_CPM);
				N: CPT(ActualMachineSpeed,CurrentRecipe.MachineSpeed_CPM/60*MachinePitch);
		END_ROUTINE

		ROUTINE R02_mmUnits 
				N: XIO(CurrentRecipe.DisplayUnitsInch)[ONS(mmConvertOneShot) ,XIO(LoadingRecipe) ONS(mmConverOneShot2) ][MUL(CartonLengthMax,25.4,MaxCartonLengthHMI) MUL(CurrentRecipe.CartonLength,25.4,CartonLengthHMI) MUL(CurrentRecipe.CartonWidth,25.4,CartonWidthHMI) MUL(CurrentRecipe.CartonDepth,25.4,CartonDepthHMI) ,MUL(CurrentRecipe.RetardOffset,25.4,RetardOffsetHMI) MUL(ArticleBucketOffset,25.4,ArticleBucketOffsetHMI) MUL(CurrentRecipe.FlapKickerOn,25.4,FlapKickerOnHMI) MUL(CurrentRecipe.FlapKickerOff,25.4,FlapKickerOffHMI) MUL(CurrentRecipe.OverheadConfinerOffset,25.4,OverheadConfinerOffsetHMI) ,MUL(CartonDetectWindowStart,25.4,CartonDetectWindowStartHMI) MUL(ProductDetectWindowStart,25.4,ProductDetectWindowStartHMI) MUL(LoadAbortActuateWindowStart,25.4,LoadAbortActuateWindowStartHMI) MUL(GlueSensorWindowStart,25.4,GlueSensorWindowStartHMI) ,MUL(CurrentRecipe.ChainSpacing,25.4,ChainSpacingHMI) MUL(CurrentRecipe.ArticlePusherOffset,25.4,ArticlePusherOffsetHMI) MUL(CurrentRecipe.ArticleRetardOffset,25.4,ArticleRetardOffsetHMI) MUL(OverheadConfinerWindowStart,25.4,OverheadConfinerWindowStartHMI) ,MUL(CartonFeedingFaultWindowStart,25.4,CartonFeedingFaultWindowStartHMI) MUL(OpenFlapRejectOffset,25.4,OpenflapRejectOffsetHMI) ,MUL(CurrentRecipe.LoadSideGlue.GlueStart1,25.4,LoadSideGlueStart1HMI) MUL(CurrentRecipe.LoadSideGlue.GlueStart2,25.4,LoadSideGlueStart2HMI) MUL(CurrentRecipe.LoadSideGlue.GlueStart3,25.4,LoadSideGlueStart3HMI) MUL(CurrentRecipe.LoadSideGlue.GlueStart4,25.4,LoadSideGlueStart4HMI) MUL(CurrentRecipe.LoadSideGlue.GlueStart5,25.4,LoadSideGlueStart5HMI) ,MUL(CurrentRecipe.LoadSideGlue.GlueEnd1,25.4,LoadSideGlueEnd1HMI) MUL(CurrentRecipe.LoadSideGlue.GlueEnd2,25.4,LoadSideGlueEnd2HMI) MUL(CurrentRecipe.LoadSideGlue.GlueEnd3,25.4,LoadSideGlueEnd3HMI) MUL(CurrentRecipe.LoadSideGlue.GlueEnd4,25.4,LoadSideGlueEnd4HMI) MUL(CurrentRecipe.LoadSideGlue.GlueEnd5,25.4,LoadSideGlueEnd5HMI) ,MUL(CurrentRecipe.NonLoadSideGlue.GlueStart1,25.4,NonLoadSideGlueStart1HMI) MUL(CurrentRecipe.NonLoadSideGlue.GlueStart2,25.4,NonLoadSideGlueStart2HMI) MUL(CurrentRecipe.NonLoadSideGlue.GlueStart3,25.4,NonLoadSideGlueStart3HMI) MUL(CurrentRecipe.NonLoadSideGlue.GlueStart4,25.4,NonLoadSideGlueStart4HMI) MUL(CurrentRecipe.NonLoadSideGlue.GlueStart5,25.4,NonLoadSideGlueStart5HMI) ,MUL(CurrentRecipe.NonLoadSideGlue.GlueEnd1,25.4,NonLoadSideGlueEnd1HMI) MUL(CurrentRecipe.NonLoadSideGlue.GlueEnd2,25.4,NonLoadSideGlueEnd2HMI) MUL(CurrentRecipe.NonLoadSideGlue.GlueEnd3,25.4,NonLoadSideGlueEnd3HMI) MUL(CurrentRecipe.NonLoadSideGlue.GlueEnd4,25.4,NonLoadSideGlueEnd4HMI) MUL(CurrentRecipe.NonLoadSideGlue.GlueEnd5,25.4,NonLoadSideGlueEnd5HMI) ];
				N: XIO(CurrentRecipe.DisplayUnitsInch)XIO(LoadingRecipe)[DIV(MaxCartonLengthHMI,25.4,CartonLengthMax) DIV(CartonLengthHMI,25.4,CurrentRecipe.CartonLength) DIV(CartonWidthHMI,25.4,CurrentRecipe.CartonWidth) DIV(CartonDepthHMI,25.4,CurrentRecipe.CartonDepth) ,DIV(RetardOffsetHMI,25.4,CurrentRecipe.RetardOffset) DIV(ArticleBucketOffsetHMI,25.4,ArticleBucketOffset) DIV(FlapKickerOnHMI,25.4,CurrentRecipe.FlapKickerOn) DIV(FlapKickerOffHMI,25.4,CurrentRecipe.FlapKickerOff) DIV(OverheadConfinerOffsetHMI,25.4,CurrentRecipe.OverheadConfinerOffset) ,DIV(CartonDetectWindowStartHMI,25.4,CartonDetectWindowStart) DIV(ProductDetectWindowStartHMI,25.4,ProductDetectWindowStart) DIV(LoadAbortActuateWindowStartHMI,25.4,LoadAbortActuateWindowStart) DIV(GlueSensorWindowStartHMI,25.4,GlueSensorWindowStart) ,DIV(OverheadConfinerWindowStartHMI,25.4,OverheadConfinerWindowStart) DIV(ChainSpacingHMI,25.4,CurrentRecipe.ChainSpacing) DIV(ArticlePusherOffsetHMI,25.4,CurrentRecipe.ArticlePusherOffset) DIV(ArticleRetardOffsetHMI,25.4,CurrentRecipe.ArticleRetardOffset) ,DIV(CartonFeedingFaultWindowStartHMI,25.4,CartonFeedingFaultWindowStart) DIV(OpenflapRejectOffsetHMI,25.4,OpenFlapRejectOffset) ,DIV(LoadSideGlueStart1HMI,25.4,CurrentRecipe.LoadSideGlue.GlueStart1) DIV(LoadSideGlueStart2HMI,25.4,CurrentRecipe.LoadSideGlue.GlueStart2) DIV(LoadSideGlueStart3HMI,25.4,CurrentRecipe.LoadSideGlue.GlueStart3) DIV(LoadSideGlueStart4HMI,25.4,CurrentRecipe.LoadSideGlue.GlueStart4) DIV(LoadSideGlueStart5HMI,25.4,CurrentRecipe.LoadSideGlue.GlueStart5) ,DIV(LoadSideGlueEnd1HMI,25.4,CurrentRecipe.LoadSideGlue.GlueEnd1) DIV(LoadSideGlueEnd2HMI,25.4,CurrentRecipe.LoadSideGlue.GlueEnd2) DIV(LoadSideGlueEnd3HMI,25.4,CurrentRecipe.LoadSideGlue.GlueEnd3) DIV(LoadSideGlueEnd4HMI,25.4,CurrentRecipe.LoadSideGlue.GlueEnd4) DIV(LoadSideGlueEnd5HMI,25.4,CurrentRecipe.LoadSideGlue.GlueEnd5) ,DIV(NonLoadSideGlueStart1HMI,25.4,CurrentRecipe.NonLoadSideGlue.GlueStart1) DIV(NonLoadSideGlueStart2HMI,25.4,CurrentRecipe.NonLoadSideGlue.GlueStart2) DIV(NonLoadSideGlueStart3HMI,25.4,CurrentRecipe.NonLoadSideGlue.GlueStart3) DIV(NonLoadSideGlueStart4HMI,25.4,CurrentRecipe.NonLoadSideGlue.GlueStart4) DIV(NonLoadSideGlueStart5HMI,25.4,CurrentRecipe.NonLoadSideGlue.GlueStart5) ,DIV(NonLoadSideGlueEnd1HMI,25.4,CurrentRecipe.NonLoadSideGlue.GlueEnd1) DIV(NonLoadSideGlueEnd2HMI,25.4,CurrentRecipe.NonLoadSideGlue.GlueEnd2) DIV(NonLoadSideGlueEnd3HMI,25.4,CurrentRecipe.NonLoadSideGlue.GlueEnd3) DIV(NonLoadSideGlueEnd4HMI,25.4,CurrentRecipe.NonLoadSideGlue.GlueEnd4) DIV(NonLoadSideGlueEnd5HMI,25.4,CurrentRecipe.NonLoadSideGlue.GlueEnd5) ];
		END_ROUTINE

		ROUTINE R03_InchUnits 
				N: XIC(CurrentRecipe.DisplayUnitsInch)[ONS(InchConvertOneShot) ,XIO(LoadingRecipe) ONS(InchConvertOneShot2) ][MOV(CartonLengthMax,MaxCartonLengthHMI) MOV(CurrentRecipe.CartonLength,CartonLengthHMI) MOV(CurrentRecipe.CartonWidth,CartonWidthHMI) MOV(CurrentRecipe.CartonDepth,CartonDepthHMI) ,MOV(ArticleBucketOffset,ArticleBucketOffsetHMI) MOV(CurrentRecipe.FlapKickerOn,FlapKickerOnHMI) MOV(CurrentRecipe.FlapKickerOff,FlapKickerOffHMI) MOV(CurrentRecipe.RetardOffset,RetardOffsetHMI) MOV(CurrentRecipe.OverheadConfinerOffset,OverheadConfinerOffsetHMI) ,MOV(CurrentRecipe.ChainSpacing,ChainSpacingHMI) MOV(CurrentRecipe.ArticlePusherOffset,ArticlePusherOffsetHMI) MOV(CurrentRecipe.ArticleRetardOffset,ArticleRetardOffsetHMI) MOV(OverheadConfinerWindowStart,OverheadConfinerWindowStartHMI) ,MOV(CartonDetectWindowStart,CartonDetectWindowStartHMI) MOV(ProductDetectWindowStart,ProductDetectWindowStartHMI) MOV(LoadAbortActuateWindowStart,LoadAbortActuateWindowStartHMI) MOV(GlueSensorWindowStart,GlueSensorWindowStartHMI) ,MOV(CartonFeedingFaultWindowStart,CartonFeedingFaultWindowStartHMI) MOV(OpenFlapRejectOffset,OpenflapRejectOffsetHMI) ,MOV(CurrentRecipe.LoadSideGlue.GlueStart1,LoadSideGlueStart1HMI) MOV(CurrentRecipe.LoadSideGlue.GlueStart2,LoadSideGlueStart2HMI) MOV(CurrentRecipe.LoadSideGlue.GlueStart3,LoadSideGlueStart3HMI) MOV(CurrentRecipe.LoadSideGlue.GlueStart4,LoadSideGlueStart4HMI) MOV(CurrentRecipe.LoadSideGlue.GlueStart5,LoadSideGlueStart5HMI) ,MOV(CurrentRecipe.LoadSideGlue.GlueEnd1,LoadSideGlueEnd1HMI) MOV(CurrentRecipe.LoadSideGlue.GlueEnd2,LoadSideGlueEnd2HMI) MOV(CurrentRecipe.LoadSideGlue.GlueEnd3,LoadSideGlueEnd3HMI) MOV(CurrentRecipe.LoadSideGlue.GlueEnd4,LoadSideGlueEnd4HMI) MOV(CurrentRecipe.LoadSideGlue.GlueEnd5,LoadSideGlueEnd5HMI) ,MOV(CurrentRecipe.NonLoadSideGlue.GlueStart1,NonLoadSideGlueStart1HMI) MOV(CurrentRecipe.NonLoadSideGlue.GlueStart2,NonLoadSideGlueStart2HMI) MOV(CurrentRecipe.NonLoadSideGlue.GlueStart3,NonLoadSideGlueStart3HMI) MOV(CurrentRecipe.NonLoadSideGlue.GlueStart4,NonLoadSideGlueStart4HMI) MOV(CurrentRecipe.NonLoadSideGlue.GlueStart5,NonLoadSideGlueStart5HMI) ,MOV(CurrentRecipe.NonLoadSideGlue.GlueEnd1,NonLoadSideGlueEnd1HMI) MOV(CurrentRecipe.NonLoadSideGlue.GlueEnd2,NonLoadSideGlueEnd2HMI) MOV(CurrentRecipe.NonLoadSideGlue.GlueEnd3,NonLoadSideGlueEnd3HMI) MOV(CurrentRecipe.NonLoadSideGlue.GlueEnd4,NonLoadSideGlueEnd4HMI) MOV(CurrentRecipe.NonLoadSideGlue.GlueEnd5,NonLoadSideGlueEnd5HMI) ];
				N: XIC(CurrentRecipe.DisplayUnitsInch)XIO(LoadingRecipe)[MOV(MaxCartonLengthHMI,CartonLengthMax) MOV(CartonLengthHMI,CurrentRecipe.CartonLength) MOV(CartonWidthHMI,CurrentRecipe.CartonWidth) MOV(CartonDepthHMI,CurrentRecipe.CartonDepth) ,MOV(ArticleBucketOffsetHMI,ArticleBucketOffset) MOV(FlapKickerOnHMI,CurrentRecipe.FlapKickerOn) MOV(FlapKickerOffHMI,CurrentRecipe.FlapKickerOff) MOV(RetardOffsetHMI,CurrentRecipe.RetardOffset) MOV(OverheadConfinerOffsetHMI,CurrentRecipe.OverheadConfinerOffset) ,MOV(CartonDetectWindowStartHMI,CartonDetectWindowStart) MOV(ProductDetectWindowStartHMI,ProductDetectWindowStart) MOV(LoadAbortActuateWindowStartHMI,LoadAbortActuateWindowStart) MOV(GlueSensorWindowStartHMI,GlueSensorWindowStart) ,MOV(ChainSpacingHMI,CurrentRecipe.ChainSpacing) MOV(ArticlePusherOffsetHMI,CurrentRecipe.ArticlePusherOffset) MOV(ArticleRetardOffsetHMI,CurrentRecipe.ArticleRetardOffset) MOV(OverheadConfinerWindowStartHMI,OverheadConfinerWindowStart) ,MOV(CartonFeedingFaultWindowStartHMI,CartonFeedingFaultWindowStart) MOV(OpenflapRejectOffsetHMI,OpenFlapRejectOffset) ,MOV(LoadSideGlueStart1HMI,CurrentRecipe.LoadSideGlue.GlueStart1) MOV(LoadSideGlueStart2HMI,CurrentRecipe.LoadSideGlue.GlueStart2) MOV(LoadSideGlueStart3HMI,CurrentRecipe.LoadSideGlue.GlueStart3) MOV(LoadSideGlueStart4HMI,CurrentRecipe.LoadSideGlue.GlueStart4) MOV(LoadSideGlueStart5HMI,CurrentRecipe.LoadSideGlue.GlueStart5) ,MOV(LoadSideGlueStart1HMI,CurrentRecipe.LoadSideGlue.GlueStart1) MOV(LoadSideGlueStart2HMI,CurrentRecipe.LoadSideGlue.GlueStart2) MOV(LoadSideGlueStart3HMI,CurrentRecipe.LoadSideGlue.GlueStart3) MOV(LoadSideGlueStart4HMI,CurrentRecipe.LoadSideGlue.GlueStart4) MOV(LoadSideGlueStart5HMI,CurrentRecipe.LoadSideGlue.GlueStart5) ,MOV(LoadSideGlueEnd1HMI,CurrentRecipe.LoadSideGlue.GlueEnd1) MOV(LoadSideGlueEnd2HMI,CurrentRecipe.LoadSideGlue.GlueEnd2) MOV(LoadSideGlueEnd3HMI,CurrentRecipe.LoadSideGlue.GlueEnd3) MOV(LoadSideGlueEnd4HMI,CurrentRecipe.LoadSideGlue.GlueEnd4) MOV(LoadSideGlueEnd5HMI,CurrentRecipe.LoadSideGlue.GlueEnd5) ,MOV(NonLoadSideGlueStart1HMI,CurrentRecipe.NonLoadSideGlue.GlueStart1) MOV(NonLoadSideGlueStart2HMI,CurrentRecipe.NonLoadSideGlue.GlueStart2) MOV(NonLoadSideGlueStart3HMI,CurrentRecipe.NonLoadSideGlue.GlueStart3) MOV(NonLoadSideGlueStart4HMI,CurrentRecipe.NonLoadSideGlue.GlueStart4) MOV(NonLoadSideGlueStart5HMI,CurrentRecipe.NonLoadSideGlue.GlueStart5) ,MOV(NonLoadSideGlueEnd1HMI,CurrentRecipe.NonLoadSideGlue.GlueEnd1) MOV(NonLoadSideGlueEnd2HMI,CurrentRecipe.NonLoadSideGlue.GlueEnd2) MOV(NonLoadSideGlueEnd3HMI,CurrentRecipe.NonLoadSideGlue.GlueEnd3) MOV(NonLoadSideGlueEnd4HMI,CurrentRecipe.NonLoadSideGlue.GlueEnd4) MOV(NonLoadSideGlueEnd5HMI,CurrentRecipe.NonLoadSideGlue.GlueEnd5) ];
		END_ROUTINE

		ROUTINE R05_MinMax 
				N: CPT(MachineSpeedMax,175);
				N: [XIC(CurrentRecipe.DisplayUnitsInch) MOV(4,CartonLengthMin) SUB(MachinePitch,0.5,CartonLengthMax) ,XIO(CurrentRecipe.DisplayUnitsInch) MOV(102,CartonLengthMin) CPT(CartonLengthMax,(MachinePitch-0.5)*25.4) ];
				N: [XIC(CurrentRecipe.DisplayUnitsInch) MOV(1,CartonWidthMin) MOV(5,CartonWidthMax) ,XIO(CurrentRecipe.DisplayUnitsInch) MOV(25,CartonWidthMin) MOV(127,CartonWidthMax) ];
				N: [XIC(CurrentRecipe.DisplayUnitsInch) MOV(1.5,CartonDepthMin) MOV(12,CartonDepthMax) ,XIO(CurrentRecipe.DisplayUnitsInch) MOV(38,CartonDepthMin) MOV(305,CartonDepthMax) ];
				N: [XIC(CurrentRecipe.DisplayUnitsInch) MOV(-1,ChainSpacingMin) MOV(1,ChainSpacingMax) ,XIO(CurrentRecipe.DisplayUnitsInch) MOV(-25,ChainSpacingMin) MOV(25,ChainSpacingMax) ];
				N: [XIC(CurrentRecipe.DisplayUnitsInch) MOV(0,RetardOffsetMin) MOV(5,RetardOffsetMax) ,XIO(CurrentRecipe.DisplayUnitsInch) MOV(0,RetardOffsetMin) MOV(127,RetardOffsetMax) ];
				N: [XIC(CurrentRecipe.DisplayUnitsInch) MOV(0,FlapKickertMin) MOV(12,FlapKickerMax) ,XIO(CurrentRecipe.DisplayUnitsInch) MOV(0,FlapKickertMin) MOV(127,FlapKickerMax) ];
				N: [XIC(CurrentRecipe.DisplayUnitsInch) MOV(0,ChainPitchMin) MOV(12,ChainPitchMax) ,XIO(CurrentRecipe.DisplayUnitsInch) MOV(0,ChainPitchMin) MUL(MachinePitch,25.4,ChainPitchMax) ];
				N: [XIC(CurrentRecipe.DisplayUnitsInch) MOV(0,OpenFlapOffsetMin) MOV(50,OpenFlapOffsetMax) ,XIO(CurrentRecipe.DisplayUnitsInch) MOV(0,OpenFlapOffsetMin) MOV(1270,OpenFlapOffsetMax) ];
				N: MOV(0,VacuumMin)MOV(120,VacuumMax);
		END_ROUTINE

		ROUTINE R06_General_Logic 
				N: XIC(SanitationModeBit)MOV(30,CurrentRecipe.MachineSpeed_CPM);
				N: DIV(LoadSideTuckerOffsetHMI,30,CurrentRecipe.LoadSideTuckerOffset)DIV(NonLoadSideTuckerOffsetHMI,30,CurrentRecipe.NonLoadSideTuckerOffset)DIV(NonLoadSideTucker2OffsetHMI,30,CurrentRecipe.NonLoadSideTucker2Offset)ADD(CartonLengthHMI,CartonSpacingHMI,PocketSpacingHMI)ADD(CartonLengthHMI,ChainSpacingHMI,TotalChainSpacingHMI)CPT(TotalArticleBucketSpacingHMI,PocketSpacingHMI+CurrentRecipe.ArticleRetardOffset-CurrentRecipe.ArticlePusherOffset);
				N: MOV(MTR_ArticleBucket_Pusher.TorqueReference,temp)MOV(MTR_PusherChain.TorqueReference,temp)MOV(MTR_RetardChain.TorqueReference,temp)MOV(Reg_Servo_Axis.ActualPosition,temp)MOV(MTR_LoadSideTucker.TorqueReference,temp);
				N: XIC(AutoLogOutDisabled)MOV(60,SecurityLogOutTime);
				N: XIC(Engage)ONS(EngageOneShot)OTL(WarpFactor10);
				N: XIC(WarpFactor10)TON(WarpTimer,?,?)XIC(WarpTimer.DN)OTU(WarpFactor10);
				N: XIC(RaiseShields)EQU(ShieldState,0)MOV(590,ShieldHorzPos)MOV(10,ShieldState);
				N: EQU(ShieldState,10)XIO(ChangeStates)MOV(100,ShieldWidth)MOV(100,ShieldHeight)MOV(20,ShieldState);
				N: EQU(ShieldState,20)XIC(ChangeStates)MOV(200,ShieldWidth)MOV(200,ShieldHeight)MOV(30,ShieldState);
				N: EQU(ShieldState,30)XIO(ChangeStates)MOV(300,ShieldWidth)MOV(300,ShieldHeight)MOV(40,ShieldState);
				N: EQU(ShieldState,40)XIC(ChangeStates)MOV(400,ShieldWidth)MOV(400,ShieldHeight)MOV(50,ShieldState);
				N: EQU(ShieldState,50)XIO(ChangeStates)MOV(500,ShieldWidth)MOV(500,ShieldHeight)MOV(60,ShieldState);
				N: EQU(ShieldState,60)XIC(ChangeStates)MOV(600,ShieldWidth)MOV(600,ShieldHeight)MOV(70,ShieldState);
				N: EQU(ShieldState,70)XIO(ChangeStates)MOV(700,ShieldWidth)MOV(700,ShieldHeight)MOV(80,ShieldState);
				N: EQU(ShieldState,80)XIC(ChangeStates)MOV(800,ShieldWidth)MOV(800,ShieldHeight)MOV(90,ShieldState);
				N: EQU(ShieldState,90)XIO(ChangeStates)MOV(900,ShieldWidth)MOV(900,ShieldHeight)MOV(100,ShieldState);
				N: EQU(ShieldState,100)XIC(ChangeStates)MOV(1000,ShieldWidth)MOV(1000,ShieldHeight)MOV(110,ShieldState);
				N: EQU(ShieldState,110)TON(AttackDelayTimer,?,?)XIC(AttackDelayTimer.DN)XIO(ChangeStates)MOV(0,PhasorHorzPos)MOV(120,ShieldState);
				N: EQU(ShieldState,111)XIC(ChangeStates)MOV(112,ShieldState);
				N: EQU(ShieldState,112)XIO(ChangeStates)MOV(120,ShieldState);
				N: EQU(ShieldState,120)XIC(ChangeStates)MOV(-600,PhasorHorzPos)MOV(130,ShieldState);
				N: EQU(ShieldState,130)XIO(ChangeStates)MOV(100,PhasorHorzPos)MOV(131,ShieldState);
				N: EQU(ShieldState,131)XIC(ChangeStates)MOV(-600,PhasorHorzPos)MOV(140,ShieldState);
				N: EQU(ShieldState,140)TON(EndBattleTimer2,?,?)XIC(EndBattleTimer2.DN)XIC(ChangeStates)MOV(-600,PhasorHorzPos)MOV(150,ShieldState);
				N: EQU(ShieldState,150)OTE(ShowVictoryMessage)MOV(550,MessagePosition)MOV(-600,ShieldHorzPos)TON(EndBattleTimer,?,?)XIC(EndBattleTimer.DN)OTU(RaiseShields)MOV(150,ShieldState);
				N: XIC(RaiseShields)XIO(stateTimer.DN)TON(stateTimer,?,?);
				N: LES(stateTimer.ACC,200)OTE(ChangeStates);
				N: XIO(RaiseShields)MOV(-600,PhasorHorzPos)MOV(100,ShieldWidth)MOV(100,ShieldHeight)MOV(-600,ShieldHorzPos)MOV(-600,MessagePosition)MOV(0,ShieldState);
				RC: "Read Firmware Version of PLC Processor.";
				N: [[XIO(PLCFirmwareRequest.DN) ,XIC(PLCFirmwareRequest.ER) ] XIC(ShortBlink) MSG(PLCFirmwareRequest) ,XIC(PLCFirmwareRequest.DN) MOV(PLCFirmware[6],PLCFirmwareMajorRev) MOV(PLCFirmware[7],PLCFirmwareMinorRev) ];
				RC: "Read Firmware Version of DRV1 - Feeder Servo Drive";
				N: [[XIO(DRV1FirmwareRequest.DN) ,XIC(DRV1FirmwareRequest.ER) ] XIC(ShortBlink) MSG(DRV1FirmwareRequest) ,XIC(DRV1FirmwareRequest.DN) AND(DRV1Firmware[6],-1,DRV1FirmwareMajorRev) AND(DRV1Firmware[7],-1,DRV1FirmwareMinorRev) ];
				RC: "Read Firmware Version of DRV2 - Pusher Chain Servo Drive";
				N: [[XIO(DRV2FirmwareRequest.DN) ,XIC(DRV2FirmwareRequest.ER) ] XIC(ShortBlink) MSG(DRV2FirmwareRequest) ,XIC(DRV2FirmwareRequest.DN) AND(DRV2Firmware[6],-1,DRV2FirmwareMajorRev) AND(DRV2Firmware[7],-1,DRV2FirmwareMinorRev) ];
				RC: "Read Firmware Version of DRV3 - Retard Chain Servo Drive";
				N: [[XIO(DRV3FirmwareRequest.DN) ,XIC(DRV3FirmwareRequest.ER) ] XIC(ShortBlink) MSG(DRV3FirmwareRequest) ,XIC(DRV3FirmwareRequest.DN) AND(DRV3Firmware[6],-1,DRV3FirmwareMajorRev) AND(DRV3Firmware[7],-1,DRV3FirmwareMinorRev) ];
				RC: "Read Firmware Version of DRV4 - Overhead Confiner Servo Drive";
				N: XIC(OverheadConfinerPresent)[[XIO(DRV4FirmwareRequest.DN) ,XIC(DRV4FirmwareRequest.ER) ] XIC(ShortBlink) MSG(DRV4FirmwareRequest) ,XIC(DRV4FirmwareRequest.DN) AND(DRV4Firmware[6],-1,DRV4FirmwareMajorRev) AND(DRV4Firmware[7],-1,DRV4FirmwareMinorRev) ];
				RC: "Read Firmware Version of DRV5 - Load Side Tucker Servo Drive";
				N: [[XIO(DRV5FirmwareRequest.DN) ,XIC(DRV5FirmwareRequest.ER) ] XIC(ShortBlink) MSG(DRV5FirmwareRequest) ,XIC(DRV5FirmwareRequest.DN) AND(DRV5Firmware[6],-1,DRV5FirmwareMajorRev) AND(DRV5Firmware[7],-1,DRV5FirmwareMinorRev) ];
				RC: "Read Firmware Version of DRV6 - Non Load Side Tucker Servo Drive";
				N: [[XIO(DRV6FirmwareRequest.DN) ,XIC(DRV6FirmwareRequest.ER) ] XIC(ShortBlink) MSG(DRV6FirmwareRequest) ,XIC(DRV6FirmwareRequest.DN) MOV(DRV6Firmware[6],DRV6FirmwareMajorRev) MOV(DRV6Firmware[7],DRV6FirmwareMinorRev) ,XIC(DRV6FirmwareRequest.DN) AND(DRV6Firmware[6],-1,DRV6FirmwareMajorRev) AND(DRV6Firmware[7],-1,DRV6FirmwareMinorRev) ];
				RC: "Read Firmware Version of DRV7 - Article Bucket Pusher Servo Drive";
				N: XIC(ArticleBucketPresent)[[XIO(DRV7FirmwareRequest.DN) ,XIC(DRV7FirmwareRequest.ER) ] XIC(ShortBlink) MSG(DRV7FirmwareRequest) ,XIC(DRV7FirmwareRequest.DN) MOV(DRV7Firmware[6],DRV7FirmwareMajorRev) MOV(DRV7Firmware[7],DRV7FirmwareMinorRev) ,XIC(DRV7FirmwareRequest.DN) AND(DRV7Firmware[6],-1,DRV7FirmwareMajorRev) AND(DRV7Firmware[7],-1,DRV7FirmwareMinorRev) ];
				RC: "Read Firmware Version of DRV8 - Article Bucket Retard Servo Drive";
				N: XIC(ArticleBucketPresent)[[XIO(DRV8FirmwareRequest.DN) ,XIC(DRV8FirmwareRequest.ER) ] XIC(ShortBlink) MSG(DRV8FirmwareRequest) ,XIC(DRV8FirmwareRequest.DN) MOV(DRV8Firmware[6],DRV8FirmwareMajorRev) MOV(DRV8Firmware[7],DRV8FirmwareMinorRev) ,XIC(DRV8FirmwareRequest.DN) AND(DRV8Firmware[6],-1,DRV8FirmwareMajorRev) AND(DRV8Firmware[7],-1,DRV8FirmwareMinorRev) ];
				RC: "Read Firmware Version of DRV9 - Interceptor Station 1/ Right Rotor Servo Drive";
				N: XIC(INT_01_Station_Present)[[XIO(DRV9FirmwareRequest.DN) ,XIC(DRV9FirmwareRequest.ER) ] XIC(ShortBlink) MSG(DRV9FirmwareRequest) ,XIC(DRV9FirmwareRequest.DN) MOV(DRV9Firmware[6],DRV9FirmwareMajorRev) MOV(DRV9Firmware[7],DRV9FirmwareMinorRev) ,XIC(DRV9FirmwareRequest.DN) AND(DRV9Firmware[6],-1,DRV9FirmwareMajorRev) AND(DRV9Firmware[7],-1,DRV9FirmwareMinorRev) ];
				RC: "Read Firmware Version of DRV10 - Interceptor Station 1/ Left Rotor Servo Drive";
				N: XIC(INT_01_Station_Present)[[XIO(DRV10FirmwareRequest.DN) ,XIC(DRV10FirmwareRequest.ER) ] XIC(ShortBlink) MSG(DRV10FirmwareRequest) ,XIC(DRV10FirmwareRequest.DN) MOV(DRV10Firmware[6],DRV10FirmwareMajorRev) MOV(DRV10Firmware[7],DRV10FirmwareMinorRev) ,XIC(DRV10FirmwareRequest.DN) AND(DRV10Firmware[6],-1,DRV10FirmwareMajorRev) AND(DRV10Firmware[7],-1,DRV10FirmwareMinorRev) ];
				RC: "Read Firmware Version of DRV11 - Interceptor Station 1/ Phasing Belt 1 Servo Drive";
				N: XIC(INT_01_Station_Present)[[XIO(DRV11FirmwareRequest.DN) ,XIC(DRV11FirmwareRequest.ER) ] XIC(ShortBlink) MSG(DRV11FirmwareRequest) ,XIC(DRV11FirmwareRequest.DN) MOV(DRV11Firmware[6],DRV11FirmwareMajorRev) MOV(DRV11Firmware[7],DRV11FirmwareMinorRev) ,XIC(DRV11FirmwareRequest.DN) AND(DRV11Firmware[6],-1,DRV11FirmwareMajorRev) AND(DRV11Firmware[7],-1,DRV11FirmwareMinorRev) ];
				RC: "Read Firmware Version of VFD1- Hopper Belt Drive";
				N: [XIO(VFD1FirmwareRequest.DN) ,XIC(VFD1FirmwareRequest.ER) ]XIC(ShortBlink)MSG(VFD1FirmwareRequest);
				RC: "Read Firmware Version of VFD2- Discharge Belt Drive";
				N: [XIO(VFD2FirmwareRequest.DN) ,XIC(VFD2FirmwareRequest.ER) ]XIC(ShortBlink)MSG(VFD2FirmwareRequest);
				RC: "Read Firmware Version of VFD3- Abort Belt Drive";
				N: XIC(AbortBeltPresent)[XIO(VFD3FirmwareRequest.DN) ,XIC(VFD3FirmwareRequest.ER) ]XIC(ShortBlink)MSG(VFD3FirmwareRequest);
				RC: "Read Firmware Version of VFD4- Open Flap Reject Belt Drive";
				N: XIC(OpenFlapRejectPresent)[XIO(VFD4FirmwareRequest.DN) ,XIC(VFD4FirmwareRequest.ER) ]XIC(ShortBlink)MSG(VFD4FirmwareRequest);
				RC: "Read Firmware Version of VFD5- Interceptor Station 1/ Launch Belt Drive";
				N: XIC(INT_01_Station_Present)[XIO(VFD5FirmwareRequest.DN) ,XIC(VFD5FirmwareRequest.ER) ]XIC(ShortBlink)MSG(VFD5FirmwareRequest);
				RC: "Read Firmware Version of VFD6- Interceptor Station 1/ Acceeration Belt Drive";
				N: XIC(INT_01_Station_Present)[XIO(VFD6FirmwareRequest.DN) ,XIC(VFD6FirmwareRequest.ER) ]XIC(ShortBlink)MSG(VFD6FirmwareRequest);
				RC: "Read Firmware Version of VFD7- Interceptor Station 1/ Infeed/ Metering Belt Drive";
				N: XIC(INT_01_Station_Present)[XIO(VFD7FirmwareRequest.DN) ,XIC(VFD7FirmwareRequest.ER) ]XIC(ShortBlink)MSG(VFD7FirmwareRequest);
		END_ROUTINE

		ROUTINE R07_Stats 
				N: XIO(ClockUpdateTimer.DN)TON(ClockUpdateTimer,?,?)XIC(ClockUpdateTimer.DN)GSV(WallClockTime,?,LocalDateTime,CurrentClockUpdate[0])MOV(CurrentClockUpdate[5],DateTime.Seconds)MOV(CurrentClockUpdate[4],DateTime.Minute)MOV(CurrentClockUpdate[3],DateTime.Hour)MOV(CurrentClockUpdate[2],DateTime.Day)MOV(CurrentClockUpdate[1],DateTime.Month)MOV(CurrentClockUpdate[0],DateTime.Year)CPT(CurrentTime,DateTime.Minute+(DateTime.Hour*100))COP(DateTime,Stats.SaveTime,1);
				N: [XIC(SetTimeHMI) ,XIC(SetTimeTimer.TT) ]TON(SetTimeTimer,?,?)XIC(SetTimeTimer.DN)SSV(WallClockTime,?,LocalDateTime,OperatorTime[0])OTU(SetTimeHMI);
				N: EQU(HMIActiveDisplay,301)ONS(PreloadClockOneShot)COP(CurrentClockUpdate[0],OperatorTime[0],7);
				N: [XIC(Shift1EnabledHMI) LIM(Shift1Start,CurrentTime,Shift1End) ONS(ClearStatsOneshot) ,XIC(Shift2EnabledHMI) LIM(Shift2Start,CurrentTime,Shift2End) ONS(ClearStatsOneshot2) ,XIC(Shift3EnabledHMI) LIM(Shift3Start,CurrentTime,Shift3End) ONS(ClearStatsOneshot3) ]OTL(ClearStats);
				N: [LIM(Shift1End,CurrentTime,Shift1Start) ONS(ClearStatsOneshot4) XIC(Shift1EnabledHMI) CONCAT(ClearString,ClearString,Stats.ShiftNum) CONCAT(Shift1String,EmptyString,Stats.ShiftNum) ,LIM(Shift2End,CurrentTime,Shift2Start) ONS(ClearStatsOneshot5) XIC(Shift2EnabledHMI) CONCAT(ClearString,ClearString,Stats.ShiftNum) CONCAT(Shift2String,EmptyString,Stats.ShiftNum) ,LIM(Shift3End,CurrentTime,Shift3Start) ONS(ClearStatsOneshot6) XIC(Shift3EnabledHMI) CONCAT(ClearString,ClearString,Stats.ShiftNum) CONCAT(Shift3String,EmptyString,Stats.ShiftNum) ]CONCAT(Stats.ShiftNum,SaveTimeString,Stats.ShiftNum)OTL(LoadStatsFIFO);
				N: XIC(LoadStatsFIFO)TON(LoadStatsFIFODelayTImer,?,?)XIC(LoadStatsFIFODelayTImer.DN)FFL(Stats,Shift1StatsFIFO[0],Shift1StatsFFL,?,?)OTL(ClearStats)OTU(LoadStatsFIFO);
				N: XIC(ClockUpdateTimer.DN)CONCAT(EmptyString,ColonString,SaveTimeString)CONCAT(SaveTimeString,SpaceString,SaveTimeString)DTOS(Stats.SaveTime.Month,TempString)CONCAT(SaveTimeString,TempString,SaveTimeString)CONCAT(SaveTimeString,HyphenString,SaveTimeString)DTOS(Stats.SaveTime.Day,TempString)CONCAT(SaveTimeString,TempString,SaveTimeString)CONCAT(SaveTimeString,HyphenString,SaveTimeString)DTOS(Stats.SaveTime.Year,TempString)CONCAT(SaveTimeString,TempString,SaveTimeString)CONCAT(SaveTimeString,SpaceString,SaveTimeString)[GEQ(Stats.SaveTime.Hour,10) ,LES(Stats.SaveTime.Hour,10) CONCAT(SaveTimeString,ZeroString,SaveTimeString) ]DTOS(Stats.SaveTime.Hour,TempString)CONCAT(SaveTimeString,TempString,SaveTimeString)CONCAT(SaveTimeString,ColonString,SaveTimeString)[GEQ(Stats.SaveTime.Minute,10) ,LES(Stats.SaveTime.Minute,10) CONCAT(SaveTimeString,ZeroString,SaveTimeString) ]DTOS(Stats.SaveTime.Minute,TempString)CONCAT(SaveTimeString,TempString,SaveTimeString);
				N: EQU(HMIActiveDisplay,146)COP(Shift1StatsFIFO[StatArchiveSelectionNum],CurrentDisplayedArchive,1);
				N: [GRT(Stats.CartonsIn,0) CPT(Stats.Efficiency,100*(Stats.CartonsOut/Stats.CartonsIn)) ,EQU(Stats.CartonsIn,0) MOV(100,Stats.Efficiency) ];
				N: XIC(ClearShifHistoryHMI)OTL(ClearShifHistory)MOV(0,StatArchiveSelectionNum);
				N: [XIC(ClearShifHistory) XIO(Shift1StatsFFL.EM) XIC(ShortBlink) COP(EmptyStats,Shift1StatsFIFO[Shift1StatsFFL.POS],1) ,XIC(Shift1StatsFFL.DN) ]FFU(Shift1StatsFIFO[0],TempStats,Shift1StatsFFL,?,?);
				N: XIC(Shift1StatsFFL.EM)OTU(ClearShifHistory);
				N: EQU(pwView,0)XIC(PML_State.Sts_Aborted)MOV(10,pwView);
				N: EQU(pwView,10)XIC(ResetPB)MOV(20,pwView);
				N: EQU(pwView,20)XIO(StopPB)MOV(30,pwView);
				N: EQU(pwView,30)XIC(StartPB)MOV(40,pwView);
				N: EQU(pwView,40)XIO(StopPB)TON(pwveiwtimer,?,?)XIC(pwveiwtimer.DN)OTL(ShowPassword)MOV(50,pwView);
				N: GRT(pwView,10)TON(endtimer,?,?)XIC(endtimer.DN)OTU(ShowPassword)MOV(0,pwView);
		END_ROUTINE

		ROUTINE R09_RecipeCheckList 
				N: EQU(CheckListState,0)XIC(CheckListEnabled)[OTU(RecipeCheckVisable) OTU(GateCheckVisable) OTU(FeederHeightCheckVisable) OTU(DepthOfInsertionCheckVisable) OTU(LSOverheadGuideHeightCheckVisable) OTU(NLSOverheadGuideHeightCheckVisable) ,OTU(HopperAdvanceHorzCheckVisable) OTU(HopperAdvanceVertCheckVisable) OTU(PusherFacesCheckVisable) OTU(HighProductCheckVisable) OTU(TransferLugCheckVisable) OTU(LowerHopperDepth1CheckVisable) ,OTU(LowerHopperDepth2CheckVisable) OTU(SkiGuide2CheckVisable) OTU(SkiGuide1CheckVisable) OTU(SkiGuide2CheckVisable) OTU(UpperMajorGuideCheckVisable) ,OTU(LoadSideTuckGuideCheckVisable) OTU(NonLoadSideTuckGuideCheckVisable) OTU(NLSPlowDownGuideHeightCheckVisable) OTU(NLSUpstreamOverheadGuideCheckVisable) OTU(NLSOverheadGuideHeightCheckVisable) ,OTU(NLSCompressionHeightCheckVisable) OTU(NonLoadSideGlueGunHeightCheckVisable) OTU(NonLoadSideGlueGunAngleCheckVisable) OTU(NonLoadSideGlueGuideHeightCheckVisable) OTU(LoadSideGlueGuideHeightCheckVisable) OTU(LSUpstreamOverheadGuideCheckVisable) ,OTU(LoadSideOverheadGuideCheckVisable) OTU(LSPlowDownGuideHeightCheckVisable) OTU(LSCompressionHeightCheckVisable) OTU(LoadSideGlueGunHeightCheckVisable) OTU(LoadSideGlueGunAngleCheckVisable) ,OTU(GlueTypeCheckVisable) OTU(GlueTankPressureCheckVisable) OTU(GlueTankTempCheckVisable) OTU(LoadSideGlueGunTempCheckVisable) OTU(LoadSideGlueHoseTempCheckVisable) OTU(NonLoadSideGlueGunTempCheckVisable) ,OTU(NonLoadSideGlueHoseTempCheckVisable) OTU(LaserHeightCheckVisable) OTU(OverheadConfinerHeightCheckVisable) OTU(OverheadConfinerNoteCheckVisable) OTU(HopperAdvanceVertCheckVisable) OTU(UpperHopperDepthCheckVisable) ,XIO(NonLoadSideTucker2Present) OTU(NLSTuckerCheckVisable) ]MOV(10,CheckListState);
				N: EQU(CheckListState,10)[OTU(RecipeChecked) OTU(GateChecked) OTU(FeederHeightChecked) OTU(DepthOfInsertionChecked) OTU(LSOverheadGuideHeightChecked) OTU(NLSOverheadGuideHeightChecked) OTU(HopperAdvanceHorzChecked) OTU(HopperAdvanceVertChecked) ,OTU(PusherFacesChecked) OTU(HighProductChecked) OTU(TransferLugChecked) OTU(LowerHopperDepth1Checked) OTU(LowerHopperDepth2Checked) OTU(OverheadConfinerNoteChecked) OTU(SkiGuide1Checked) OTU(SkiGuide2Checked) ,OTU(UpperMajorGuideChecked) OTU(LoadSideTuckGuideChecked) OTU(NonLoadSideTuckGuideChecked) OTU(NLSPlowDownGuideHeightChecked) OTU(NLSUpstreamOverheadGuideChecked) OTU(NLSOverheadGuideHeightChecked) ,OTU(NLSCompressionHeightChecked) OTU(NonLoadSideGlueGunHeightChecked) OTU(NonLoadSideGlueGunAngleChecked) OTU(NonLoadSideGlueGuideHeightChecked) OTU(LSUpstreamOverheadGuideChecked) ,OTU(LSPlowDownGuideHeightChecked) OTU(LSCompressionHeightChecked) OTU(LoadSideGlueGunHeightChecked) OTU(LoadSideGlueGunAngleChecked) OTU(LoadSideGlueGuideHeightChecked) OTU(GlueTypeChecked) OTU(GlueTankPressureChecked) ,OTU(GlueTankTempChecked) OTU(LoadSideGlueGunTempChecked) OTU(LoadSideGlueHoseTempChecked) OTU(NonLoadSideGlueGunTempChecked) OTU(NonLoadSideGlueHoseTempChecked) OTU(LaserHeightChecked) ,OTU(OverheadConfinerHeightChecked) OTU(HopperAdvanceVertChecked) OTU(UpperHopperDepthChecked) OTU(SIPTURecipeChecked) OTU(NLSTuckerChecked) ]MOV(20,CheckListState);
				N: EQU(CheckListState,20)[CONCAT(ClearString,ClearString,CheckList.ChangedBy) ,NEQ(CurrentRecipe.GateNote,PrevRecipe.GateNote) OTL(GateCheckVisable) ,NEQ(CurrentRecipe.FeederHeight,PrevRecipe.FeederHeight) OTL(FeederHeightCheckVisable) ,NEQ(CurrentRecipe.DepthOfInsertion,PrevRecipe.DepthOfInsertion) OTL(DepthOfInsertionCheckVisable) ,NEQ(CurrentRecipe.LoadSideOverheadGuideHeight,PrevRecipe.LoadSideOverheadGuideHeight) OTL(LSOverheadGuideHeightCheckVisable) ,NEQ(CurrentRecipe.NonLoadSideOverheadGuideHeight,PrevRecipe.NonLoadSideOverheadGuideHeight) OTL(NLSOverheadGuideHeightCheckVisable) ,MOV(30,CheckListState) ];
				N: EQU(CheckListState,30)[NEQ(CurrentRecipe.PusherFacesNote,PrevRecipe.PusherFacesNote) OTL(PusherFacesCheckVisable) ,NEQ(CurrentRecipe.HighProductSiko,PrevRecipe.HighProductSiko) OTL(HighProductCheckVisable) ,NEQ(CurrentRecipe.TransferLugsNote,PrevRecipe.TransferLugsNote) OTL(TransferLugCheckVisable) ,NEQ(CurrentRecipe.OverheadConfinerNote,PrevRecipe.OverheadConfinerNote) XIC(OverheadConfinerPresent) OTL(OverheadConfinerNoteCheckVisable) ,NEQ(CurrentRecipe.ChangePartNote,PrevRecipe.ChangePartNote) XIC(NonLoadSideTucker2Present) OTL(NLSTuckerCheckVisable) ,MOV(40,CheckListState) ];
				N: EQU(CheckListState,40)[NEQ(CurrentRecipe.LowerHopperDepth1,PrevRecipe.LowerHopperDepth1) OTL(LowerHopperDepth1CheckVisable) ,NEQ(CurrentRecipe.LowerHopperDepth2,PrevRecipe.LowerHopperDepth2) OTL(LowerHopperDepth2CheckVisable) ,NEQ(CurrentRecipe.HopperAdvanceVert,PrevRecipe.HopperAdvanceVert) OTL(HopperAdvanceVertCheckVisable) ,NEQ(CurrentRecipe.HopperAdvanceHorz,PrevRecipe.HopperAdvanceHorz) OTL(HopperAdvanceHorzCheckVisable) ,MOV(50,CheckListState) ];
				N: EQU(CheckListState,50)[NEQ(CurrentRecipe.SkiGuide1,PrevRecipe.SkiGuide1) OTL(SkiGuide1CheckVisable) ,NEQ(CurrentRecipe.SkiGuide2,PrevRecipe.SkiGuide2) OTL(SkiGuide2CheckVisable) ,NEQ(CurrentRecipe.UpperMajorGuide,PrevRecipe.UpperMajorGuide) OTL(UpperMajorGuideCheckVisable) ,NEQ(CurrentRecipe.LoadSideTuckGuide,PrevRecipe.LoadSideTuckGuide) OTL(LoadSideTuckGuideCheckVisable) ,NEQ(CurrentRecipe.NonLoadSideTuckGuide,PrevRecipe.NonLoadSideTuckGuide) OTL(NonLoadSideTuckGuideCheckVisable) ,MOV(60,CheckListState) ];
				N: EQU(CheckListState,60)[NEQ(CurrentRecipe.NonLoadSidePlowDownGuideHeight,PrevRecipe.NonLoadSidePlowDownGuideHeight) OTL(NLSPlowDownGuideHeightCheckVisable) ,NEQ(CurrentRecipe.LoadSidePlowDownGuideHeight,PrevRecipe.LoadSidePlowDownGuideHeight) OTL(LSPlowDownGuideHeightCheckVisable) ,NEQ(CurrentRecipe.NonLoadSideOverheadGuideHeight,PrevRecipe.NonLoadSideOverheadGuideHeight) OTL(NonLoadSideOverheadGuideCheckVisable) ,NEQ(CurrentRecipe.LoadSideOverheadGuideHeight,PrevRecipe.LoadSideOverheadGuideHeight) OTL(LoadSideOverheadGuideCheckVisable) ,NEQ(CurrentRecipe.NonLoadSideUpstreamOverheadGuideHeight,PrevRecipe.NonLoadSideUpstreamOverheadGuideHeight) OTL(NLSUpstreamOverheadGuideCheckVisable) ,MOV(70,CheckListState) ];
				N: EQU(CheckListState,70)[NEQ(CurrentRecipe.NonLoadSidePlowDownGuideHeight,PrevRecipe.NonLoadSidePlowDownGuideHeight) OTL(NonLoadSidePlowDownGuideCheckVisable) ,NEQ(CurrentRecipe.LoadSidePlowDownGuideHeight,PrevRecipe.LoadSidePlowDownGuideHeight) OTL(LoadSidePlowDownGuideCheckVisable) ,NEQ(CurrentRecipe.NonLoadSideOverheadGuideHeight,PrevRecipe.NonLoadSideOverheadGuideHeight) OTL(NonLoadSideOverheadGuideCheckVisable) ,NEQ(CurrentRecipe.LoadSideOverheadGuideHeight,PrevRecipe.LoadSideOverheadGuideHeight) OTL(LoadSideOverheadGuideCheckVisable) ,NEQ(CurrentRecipe.NonLoadSideUpstreamOverheadGuideHeight,PrevRecipe.NonLoadSideUpstreamOverheadGuideHeight) OTL(NLSUpstreamOverheadGuideCheckVisable) ,MOV(80,CheckListState) ];
				N: EQU(CheckListState,80)[NEQ(CurrentRecipe.NonLoadSideOverheadGuideHeight,PrevRecipe.NonLoadSideOverheadGuideHeight) OTL(NLSOverheadGuideCheckVisable) ,NEQ(CurrentRecipe.NonLoadSideCompressionHeight,PrevRecipe.NonLoadSideCompressionHeight) OTL(NLSCompressionHeightCheckVisable) ,NEQ(CurrentRecipe.NonLoadSideGlueGunHeight,PrevRecipe.NonLoadSideGlueGunHeight) OTL(NonLoadSideGlueGunHeightCheckVisable) ,NEQ(CurrentRecipe.NonLoadSideGlueGunAngle,PrevRecipe.NonLoadSideGlueGunAngle) OTL(NonLoadSideGlueGunAngleCheckVisable) ,NEQ(CurrentRecipe.NonLoadSideGlueGuideHeight,PrevRecipe.NonLoadSideGlueGuideHeight) OTL(NonLoadSideGlueGuideHeightCheckVisable) ,MOV(90,CheckListState) ];
				N: EQU(CheckListState,90)[NEQ(CurrentRecipe.LoadSideUpstreamOverheadGuideHeight,PrevRecipe.LoadSideUpstreamOverheadGuideHeight) OTL(LSUpstreamOverheadGuideCheckVisable) ,NEQ(CurrentRecipe.LoadSideOverheadGuideHeight,PrevRecipe.LoadSideOverheadGuideHeight) OTL(LSOverheadGuideCheckVisable) ,NEQ(CurrentRecipe.LoadSidePlowDownGuideHeight,PrevRecipe.LoadSidePlowDownGuideHeight) OTL(LSPlowDownGuideHeightCheckVisable) ,NEQ(CurrentRecipe.LoadSideCompressionHeight,PrevRecipe.LoadSideCompressionHeight) OTL(LSCompressionHeightCheckVisable) ,MOV(100,CheckListState) ];
				N: EQU(CheckListState,100)[NEQ(CurrentRecipe.LoadSideGlueGunHeight,PrevRecipe.LoadSideGlueGunHeight) OTL(LoadSideGlueGunHeightCheckVisable) ,NEQ(CurrentRecipe.LoadSideGlueGunAngle,PrevRecipe.LoadSideGlueGunAngle) OTL(LoadSideGlueGunAngleCheckVisable) ,NEQ(CurrentRecipe.LoadSideGlueGuideHeight,PrevRecipe.LoadSideGlueGuideHeight) OTL(LoadSideGlueGuideHeightCheckVisable) ,NEQ(CurrentRecipe.GlueType,PrevRecipe.GlueType) OTL(GlueTypeCheckVisable) ,NEQ(CurrentRecipe.GlueTankAirPressure,PrevRecipe.GlueTankAirPressure) OTL(GlueTankPressureCheckVisable) ,NEQ(CurrentRecipe.GlueTankTemp,PrevRecipe.GlueTankTemp) OTL(GlueTankTempCheckVisable) ,MOV(110,CheckListState) ];
				N: EQU(CheckListState,110)[NEQ(CurrentRecipe.LSGlueGunTemp,PrevRecipe.LSGlueGunTemp) OTL(LoadSideGlueGunTempCheckVisable) ,NEQ(CurrentRecipe.LSGlueHoseTemp,PrevRecipe.LSGlueHoseTemp) OTL(LoadSideGlueHoseTempCheckVisable) ,NEQ(CurrentRecipe.NLSGlueGunTemp,PrevRecipe.NLSGlueGunTemp) OTL(NonLoadSideGlueGunTempCheckVisable) ,NEQ(CurrentRecipe.NLSGlueHoseTemp,PrevRecipe.NLSGlueHoseTemp) OTL(NonLoadSideGlueHoseTempCheckVisable) ,NEQ(CurrentRecipe.LaserHeight,PrevRecipe.LaserHeight) OTL(LaserHeightCheckVisable) ,NEQ(CurrentRecipe.OverheadConfinerHeight,PrevRecipe.OverheadConfinerHeight) OTL(OverheadConfinerHeightCheckVisable) ,NEQ(CurrentRecipe.UpperHopperDepth,PrevRecipe.UpperHopperDepth) OTL(UpperHopperDepthCheckVisable) ,MOV(120,CheckListState) ];
				N: EQU(CheckListState,120)[[XIC(RecipeCompleteBtnHMI) ,XIO(RecipeCheckVisable) ] OTL(RecipeChecked) ,[XIC(GateCompleteBtnHMI) ,XIO(GateCheckVisable) ] OTL(GateChecked) ,[XIC(FeederHeightCompleteBtnHMI) ,XIO(FeederHeightCheckVisable) ] OTL(FeederHeightChecked) ,[XIC(DepthOfInsertionCompleteBtnHMI) ,XIO(DepthOfInsertionCheckVisable) ] OTL(DepthOfInsertionChecked) ,[XIC(LSOverheadGuideHeightCompleteBtnHMI) ,XIO(LSOverheadGuideHeightCheckVisable) ] OTL(LSOverheadGuideHeightChecked) ,[XIC(NLSOverheadGuideHeightCompleteBtnHMI) ,XIO(NLSOverheadGuideHeightCheckVisable) ] OTL(NLSOverheadGuideHeightChecked) ];
				N: EQU(CheckListState,120)[[XIC(HopperAdvanceVertCompleteBtnHMI) ,XIO(HopperAdvanceVertCheckVisable) ] OTL(HopperAdvanceVertChecked) ,[XIC(HopperAdvanceHorzCompleteBtnHMI) ,XIO(HopperAdvanceHorzCheckVisable) ] OTL(HopperAdvanceHorzChecked) ,[XIC(PusherFacesCompleteBtnHMI) ,XIO(PusherFacesCheckVisable) ] OTL(PusherFacesChecked) ,[XIC(HighProductCompleteBtnHMI) ,XIO(HighProductCheckVisable) ] OTL(HighProductChecked) ,[XIC(TransferLugCompleteBtnHMI) ,XIO(TransferLugCheckVisable) ] OTL(TransferLugChecked) ,[XIC(LowerHopperDepth1CompleteBtnHMI) ,XIO(LowerHopperDepth1CheckVisable) ] OTL(LowerHopperDepth1Checked) ,[XIC(LowerHopperDepth2CompleteBtnHMI) ,XIO(LowerHopperDepth2CheckVisable) ] OTL(LowerHopperDepth2Checked) ];
				N: EQU(CheckListState,120)[[XIC(OverheadConfinerNoteCompleteBtnHMI) ,XIO(OverheadConfinerNoteCheckVisable) ] OTL(OverheadConfinerNoteChecked) ,[XIC(SkiGuide1CompleteBtnHMI) ,XIO(SkiGuide1CheckVisable) ] OTL(SkiGuide1Checked) ,[XIC(SkiGuide2CompleteBtnHMI) ,XIO(SkiGuide2CheckVisable) ] OTL(SkiGuide2Checked) ,[XIC(UpperMajorGuideCompleteBtnHMI) ,XIO(UpperMajorGuideCheckVisable) ] OTL(UpperMajorGuideChecked) ,[XIC(LoadSideTuckGuideCompleteBtnHMI) ,XIO(LoadSideTuckGuideCheckVisable) ] OTL(LoadSideTuckGuideChecked) ,[XIC(NonLoadSideTuckGuideCompleteBtnHMI) ,XIO(NonLoadSideTuckGuideCheckVisable) ] OTL(NonLoadSideTuckGuideChecked) ];
				N: EQU(CheckListState,120)[[XIC(NLSPlowDownGuideHeightCompleteBtnHMI) ,XIO(NLSPlowDownGuideHeightCheckVisable) ] OTL(NLSPlowDownGuideHeightChecked) ,[XIC(NLSUpstreamOverheadGuideCompleteBtnHMI) ,XIO(NLSUpstreamOverheadGuideCheckVisable) ] OTL(NLSUpstreamOverheadGuideChecked) ,[XIC(NLSOverheadGuideCompleteBtnHMI) ,XIO(NLSOverheadGuideCheckVisable) ] OTL(NLSOverheadGuideChecked) ,[XIC(NLSCompressionHeightCompleteBtnHMI) ,XIO(NLSCompressionHeightCheckVisable) ] OTL(NLSCompressionHeightChecked) ,[XIC(NonLoadSideGlueGunHeightCompleteBtnHMI) ,XIO(NonLoadSideGlueGunHeightCheckVisable) ] OTL(NonLoadSideGlueGunHeightChecked) ,[XIC(NonLoadSideGlueGunAngleCompleteBtnHMI) ,XIO(NonLoadSideGlueGunAngleCheckVisable) ] OTL(NonLoadSideGlueGunAngleChecked) ,[XIC(NonLoadSideGlueGuideHeightCompleteBtnHMI) ,XIO(NonLoadSideGlueGuideHeightCheckVisable) ] OTL(NonLoadSideGlueGuideHeightChecked) ];
				N: EQU(CheckListState,120)[[XIC(LSUpstreamOverheadGuideCompleteBtnHMI) ,XIO(LSUpstreamOverheadGuideCheckVisable) ] OTL(LSUpstreamOverheadGuideChecked) ,[XIC(LSPlowDownGuideHeightCompleteBtnHMI) ,XIO(LSPlowDownGuideHeightCheckVisable) ] OTL(LSPlowDownGuideHeightChecked) ,[XIC(LSCompressionHeightCompleteBtnHMI) ,XIO(LSCompressionHeightCheckVisable) ] OTL(LSCompressionHeightChecked) ,[XIC(LoadSideGlueGunHeightCompleteBtnHMI) ,XIO(LoadSideGlueGunHeightCheckVisable) ] OTL(LoadSideGlueGunHeightChecked) ,[XIC(LoadSideGlueGunAngleCompleteBtnHMI) ,XIO(LoadSideGlueGunAngleCheckVisable) ] OTL(LoadSideGlueGunAngleChecked) ,[XIC(LoadSideGlueGuideHeightCompleteBtnHMI) ,XIO(LoadSideGlueGuideHeightCheckVisable) ] OTL(LoadSideGlueGuideHeightChecked) ];
				N: EQU(CheckListState,120)[[XIC(GlueTypeCompleteBtnHMI) ,XIO(GlueTypeCheckVisable) ] OTL(GlueTypeChecked) ,[XIC(GlueTankPressureCompleteBtnHMI) ,XIO(GlueTankPressureCheckVisable) ] OTL(GlueTankPressureChecked) ,[XIC(GlueTankTempCompleteBtnHMI) ,XIO(GlueTankTempCheckVisable) ] OTL(GlueTankTempChecked) ,[XIC(LoadSideGlueGunTempCompleteBtnHMI) ,XIO(LoadSideGlueGunTempCheckVisable) ] OTL(LoadSideGlueGunTempChecked) ,[XIC(LoadSideGlueHoseTempCompleteBtnHMI) ,XIO(LoadSideGlueHoseTempCheckVisable) ] OTL(LoadSideGlueHoseTempChecked) ];
				N: EQU(CheckListState,120)[[XIC(NonLoadSideGlueGunTempCompleteBtnHMI) ,XIO(NonLoadSideGlueGunTempCheckVisable) ] OTL(NonLoadSideGlueGunTempChecked) ,[XIC(NonLoadSideGlueHoseTempCompleteBtnHMI) ,XIO(NonLoadSideGlueHoseTempCheckVisable) ] OTL(NonLoadSideGlueHoseTempChecked) ,[XIC(LaserHeightCompleteBtnHMI) ,XIO(LaserHeightCheckVisable) ] OTL(LaserHeightChecked) ,[XIC(OverheadConfinerHeightCompleteBtnHMI) ,XIO(OverheadConfinerHeightCheckVisable) ] OTL(OverheadConfinerHeightChecked) ,[XIC(UpperHopperDepthCompleteBtnHMI) ,XIO(UpperHopperDepthCheckVisable) ] OTL(UpperHopperDepthChecked) ,XIC(SIPTURecipeCompleteBtnHMI) OTL(SIPTURecipeChecked) ,[XIC(NLSTuckerCheckCompleteBtnHMI) ,XIO(NonLoadSideTucker2Present) ,XIO(NLSTuckerCheckVisable) ] OTL(NLSTuckerChecked) ];
				N: EQU(CheckListState,120)XIC(RecipeChecked)XIC(GateChecked)XIC(FeederHeightChecked)XIC(DepthOfInsertionChecked)XIC(LSOverheadGuideHeightChecked)XIC(NLSOverheadGuideHeightChecked)XIC(HopperAdvanceHorzChecked)XIC(HopperAdvanceVertChecked)XIC(PusherFacesChecked)XIC(HighProductChecked)XIC(TransferLugChecked)XIC(LowerHopperDepth1Checked)XIC(LowerHopperDepth2Checked)XIC(OverheadConfinerNoteChecked)XIC(SkiGuide1Checked)XIC(SkiGuide2Checked)XIC(UpperMajorGuideChecked)XIC(LoadSideTuckGuideChecked)XIC(NonLoadSideTuckGuideChecked)XIC(NLSPlowDownGuideHeightChecked)XIC(NLSUpstreamOverheadGuideChecked)XIC(NLSOverheadGuideHeightChecked)XIC(NLSCompressionHeightChecked)XIC(NonLoadSideGlueGunHeightChecked)XIC(NonLoadSideGlueGunAngleChecked)XIC(NonLoadSideGlueGuideHeightChecked)XIC(LSUpstreamOverheadGuideChecked)XIC(LSPlowDownGuideHeightChecked)XIC(LSCompressionHeightChecked)XIC(LoadSideGlueGunHeightChecked)XIC(LoadSideGlueGuideHeightChecked)XIC(LoadSideGlueGunAngleChecked)XIC(GlueTypeChecked)XIC(GlueTankPressureChecked)XIC(GlueTankTempChecked)XIC(LoadSideGlueGunTempChecked)XIC(LoadSideGlueHoseTempChecked)XIC(NonLoadSideGlueGunTempChecked)XIC(NonLoadSideGlueHoseTempChecked)XIC(LaserHeightChecked)XIC(OverheadConfinerHeightChecked)XIC(HopperAdvanceVertChecked)XIC(UpperHopperDepthChecked)XIC(SIPTURecipeChecked)XIC(NLSTuckerChecked)MOV(130,CheckListState);
				N: EQU(CheckListState,130)NEQ(CheckList.ChangedBy,ClearString)TON(StringDelayTImer,?,?)XIC(StringDelayTImer.DN)MOV(140,CheckListState);
				N: EQU(CheckListState,140)COP(DateTime,CheckList.Time,1)CONCAT(ClearString,ClearString,CheckListString)CONCAT(ClearString,ClearString,CheckList.OldRecipe)CONCAT(PrevRecipe.RecipeName,EmptyString,CheckList.OldRecipe)CONCAT(ClearString,ClearString,CheckList.NewRecipe)CONCAT(CurrentRecipe.RecipeName,EmptyString,CheckList.NewRecipe)MOV(160,CheckListState);
				N: EQU(CheckListState,160)DTOS(CheckList.Time.Month,TempString)CONCAT(BlankString,TempString,CheckListString)CONCAT(CheckListString,HyphenString,CheckListString)DTOS(CheckList.Time.Day,TempString)CONCAT(CheckListString,TempString,CheckListString)CONCAT(CheckListString,HyphenString,CheckListString)DTOS(CheckList.Time.Year,TempString)CONCAT(CheckListString,TempString,CheckListString)CONCAT(CheckListString,SpaceString,CheckListString)[GEQ(CheckList.Time.Hour,10) ,LES(CheckList.Time.Hour,10) CONCAT(CheckListString,ZeroString,CheckListString) ]DTOS(CheckList.Time.Hour,TempString)CONCAT(CheckListString,TempString,CheckListString)CONCAT(CheckListString,ColonString,CheckListString)[GEQ(CheckList.Time.Minute,10) ,LES(CheckList.Time.Minute,10) CONCAT(CheckListString,ZeroString,CheckListString) ]DTOS(CheckList.Time.Minute,TempString)CONCAT(CheckListString,TempString,CheckListString)MOV(170,CheckListState);
				N: EQU(CheckListState,170)CONCAT(CheckListString,PrevRecipeString,CheckListString)CONCAT(CheckListString,CheckList.OldRecipe,CheckListString)CONCAT(CheckListString,NewRecipeString,CheckListString)CONCAT(CheckListString,CheckList.NewRecipe,CheckListString)CONCAT(CheckListString,ChangedByString,CheckListString)CONCAT(CheckListString,CheckList.ChangedBy,CheckListString)MOV(180,CheckListState);
				N: EQU(CheckListState,180)FFL(CheckListString,CheckListFIFO[0],CheckListFIFOControl,?,?)OTU(CheckListEnabled)MOV(0,CheckListState);
				N: [XIC(CheckListFIFOControl.DN) ,XIC(ClearChangeOverHistory2) XIC(FlashBlink) ]XIO(CheckListFIFOControl.EM)FFU(CheckListFIFO[0],FIFOTemp,CheckListFIFOControl,?,?);
				N: [XIC(ClearChangeOverHistory) OTL(ClearChangeOverHistory2) ,XIC(CheckListFIFOControl.EM) OTU(ClearChangeOverHistory2) ];
				N: [XIC(ClearChangeOverHistoryHMI) OTL(ClearChangeOverHistory) ,XIC(CheckListFIFOControl.EM) OTU(ClearChangeOverHistory) ];
				N: XIO(CheckListEnabled)MOV(0,CheckListState);
		END_ROUTINE

		ROUTINE R10_MachineSetup 
				RC: "This run ENABLES the Charlotte Belt Servos.";
				N: XIC(OverheadConfinerPresent)XIC(MTR_OverheadConfiner.InhibitStatus)[SSV(Axis,MTR_OverheadConfiner,InhibitAxis,Axis_Enable) ,SSV(Axis,MTR_LoadSideTucker,PositionUnwind,OverheadConfiner_Tags.PositionUnwind) ];
				RC: "This rung DISABLES the Charlotte Belt Servos";
				N: XIO(OverheadConfinerPresent)XIO(MTR_OverheadConfiner.InhibitStatus)SSV(Axis,MTR_OverheadConfiner,InhibitAxis,Axis_Disable);
				RC: "This run ENABLES the Charlotte Belt Servos.";
				N: XIO(PICInfeedPresent)[XIC(MTR_ArticleBucket_Pusher.InhibitStatus) SSV(Axis,MTR_ArticleBucket_Pusher,InhibitAxis,Axis_Enable) ,XIC(MTR_ArticleBucket_Retard.InhibitStatus) SSV(Axis,MTR_ArticleBucket_Retard,InhibitAxis,Axis_Enable) ];
				RC: "This rung DISABLES the Charlotte Belt Servos";
				N: XIC(PICInfeedPresent)[XIO(MTR_ArticleBucket_Pusher.InhibitStatus) SSV(Axis,MTR_ArticleBucket_Pusher,InhibitAxis,Axis_Disable) ,XIO(MTR_ArticleBucket_Retard.InhibitStatus) SSV(Axis,MTR_ArticleBucket_Retard,InhibitAxis,Axis_Disable) ];
				N: XIC(HMI_9_Inch_Pitch_Selected)XIO(HMI_9_Inch_Pitch_Active)[MOV(270000,Feeder_Tags.PositionUnwind) SSV(Axis,Reg_Servo_Axis,PositionUnwind,Axis_Disable) ,MOV(90000,LoadSideTucker_Tags.PositionUnwind) SSV(Axis,MTR_LoadSideTucker,PositionUnwind,LoadSideTucker_Tags.PositionUnwind) ,MOV(90000,NonLoadSideTucker_Tags.PositionUnwind) SSV(Axis,MTR_LoadSideTucker,PositionUnwind,NonLoadSideTucker_Tags.PositionUnwind) ,MOV(180000,PusherChain_Tags.PositionUnwind) SSV(Axis,MTR_LoadSideTucker,PositionUnwind,PusherChain_Tags.PositionUnwind) ,MOV(180000,RetardChain_Tags.PositionUnwind) SSV(Axis,MTR_LoadSideTucker,PositionUnwind,RetardChain_Tags.PositionUnwind) ,MOV(90000,OverheadConfiner_Tags.PositionUnwind) SSV(Axis,MTR_LoadSideTucker,PositionUnwind,OverheadConfiner_Tags.PositionUnwind) ,XIO(Reg_Servo_Axis.ConfigUpdateInProcess) XIO(MTR_LoadSideTucker.ConfigUpdateInProcess) XIO(MTR_NonLoadSideTucker.ConfigUpdateInProcess) XIO(MTR_PusherChain.ConfigUpdateInProcess) XIO(MTR_RetardChain.ConfigUpdateInProcess) [XIO(MTR_OverheadConfiner.ConfigUpdateInProcess) ,XIO(OverheadConfinerPresent) ] OTL(HMI_9_Inch_Pitch_Active) OTU(HMI_12_Inch_Pitch_Active) OTU(HMI_15_Inch_Pitch_Active) OTU(HMI_9_Inch_Pitch_Selected) ];
				N: XIC(HMI_12_Inch_Pitch_Selected)XIO(HMI_12_Inch_Pitch_Active)[MOV(360000,Feeder_Tags.PositionUnwind) SSV(Axis,Reg_Servo_Axis,PositionUnwind,Feeder_Tags.PositionUnwind) ,MOV(120000,LoadSideTucker_Tags.PositionUnwind) SSV(Axis,MTR_LoadSideTucker,PositionUnwind,LoadSideTucker_Tags.PositionUnwind) ,MOV(120000,NonLoadSideTucker_Tags.PositionUnwind) SSV(Axis,MTR_LoadSideTucker,PositionUnwind,NonLoadSideTucker_Tags.PositionUnwind) ,MOV(240000,PusherChain_Tags.PositionUnwind) SSV(Axis,MTR_LoadSideTucker,PositionUnwind,PusherChain_Tags.PositionUnwind) ,MOV(240000,RetardChain_Tags.PositionUnwind) SSV(Axis,MTR_LoadSideTucker,PositionUnwind,RetardChain_Tags.PositionUnwind) ,MOV(120000,OverheadConfiner_Tags.PositionUnwind) SSV(Axis,MTR_LoadSideTucker,PositionUnwind,OverheadConfiner_Tags.PositionUnwind) ,XIO(Reg_Servo_Axis.ConfigUpdateInProcess) XIO(MTR_LoadSideTucker.ConfigUpdateInProcess) XIO(MTR_NonLoadSideTucker.ConfigUpdateInProcess) XIO(MTR_PusherChain.ConfigUpdateInProcess) XIO(MTR_RetardChain.ConfigUpdateInProcess) [XIO(MTR_OverheadConfiner.ConfigUpdateInProcess) ,XIO(OverheadConfinerPresent) ] OTL(HMI_12_Inch_Pitch_Active) OTU(HMI_9_Inch_Pitch_Active) OTU(HMI_15_Inch_Pitch_Active) OTU(HMI_12_Inch_Pitch_Selected) ];
				N: XIC(HMI_15_Inch_Pitch_Selected)XIO(HMI_15_Inch_Pitch_Active)[MOV(450000,Feeder_Tags.PositionUnwind) SSV(Axis,Reg_Servo_Axis,PositionUnwind,Feeder_Tags.PositionUnwind) ,MOV(150000,LoadSideTucker_Tags.PositionUnwind) SSV(Axis,MTR_LoadSideTucker,PositionUnwind,LoadSideTucker_Tags.PositionUnwind) ,MOV(150000,NonLoadSideTucker_Tags.PositionUnwind) SSV(Axis,MTR_LoadSideTucker,PositionUnwind,NonLoadSideTucker_Tags.PositionUnwind) ,MOV(300000,PusherChain_Tags.PositionUnwind) SSV(Axis,MTR_LoadSideTucker,PositionUnwind,PusherChain_Tags.PositionUnwind) ,MOV(300000,RetardChain_Tags.PositionUnwind) SSV(Axis,MTR_LoadSideTucker,PositionUnwind,RetardChain_Tags.PositionUnwind) ,MOV(150000,OverheadConfiner_Tags.PositionUnwind) SSV(Axis,MTR_LoadSideTucker,PositionUnwind,OverheadConfiner_Tags.PositionUnwind) ,XIO(Reg_Servo_Axis.ConfigUpdateInProcess) XIO(MTR_LoadSideTucker.ConfigUpdateInProcess) XIO(MTR_NonLoadSideTucker.ConfigUpdateInProcess) XIO(MTR_PusherChain.ConfigUpdateInProcess) XIO(MTR_RetardChain.ConfigUpdateInProcess) [XIO(MTR_OverheadConfiner.ConfigUpdateInProcess) ,XIO(OverheadConfinerPresent) ] OTL(HMI_15_Inch_Pitch_Active) OTU(HMI_9_Inch_Pitch_Active) OTU(HMI_12_Inch_Pitch_Active) OTU(HMI_15_Inch_Pitch_Selected) ];
				N: XIO(NonLoadSideTucker2Present)XIC(CurrentRecipe.ParkNLSTucker)OTU(CurrentRecipe.ParkNLSTucker);
		END_ROUTINE

		CHILD_PROGRAMS
		END_CHILD_PROGRAMS