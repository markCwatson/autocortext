This provides the .l5k program export overview of MainProgram routine within the PLC from the HS5160 machine from Kliklok-Woodman, a Enterprise Endload Cartoner. Use this program to understand the logic so that it can be queried in the future. What will often be asked is information about why a program may not be working, so this document provides the information necessary to answer this.
(MAIN := "P00_MainRoutine",
	                     MODE := 0,
	                     DisableFlag := 0,
	                     UseAsFolder := 0)
		TAG
			DoorInterlock_CatFlap OF aaRIOComm:2:I.6 (RADIX := Decimal);
			DoorInterlock_Discharge : BOOL (RADIX := Decimal) := 0;
			DumpValveEnable OF aaRIOComm:11:O.3 (RADIX := Decimal);
			GluePhotoEyeJamTImer : TIMER  := [280741,5000,0];
			GluePressureBCD : DINT (RADIX := Decimal) := 0;
			GluePressureDecimal : DINT (RADIX := Decimal) := 0;
			GluePressureOutput_Bit_0 OF aaRIOComm:11:O.4 (RADIX := Decimal);
			GluePressureOutput_Bit_1 OF aaRIOComm:11:O.5 (RADIX := Decimal);
			GluePressureOutput_Bit_2 OF aaRIOComm:11:O.6 (RADIX := Decimal);
			GluePressureOutput_Bit_3 OF aaRIOComm:11:O.7 (RADIX := Decimal);
			GlueSensor OF aaRIOComm:4:I.5 (RADIX := Decimal);
			JamTimerDuration : REAL (RADIX := Float) := 5.00000000e+003;
			LoadDelayTimer : TIMER  := [3171325,250,0];
			LongBlinkOffTimer : TIMER  := [-1072216313,500,451];
			LongBlinkTimer : TIMER  := [-1070670027,1500,415];
			LSGlueFaultEnabledHMI : BOOL (RADIX := Decimal) := 0;
			MTR_Temp_Dwell : TIMER  := [-1070670027,10000,3594];
			NonMCR_Faults_Cleared_Timer : TIMER  := [-1070670027,750,132];
			NotAbortedWDelayTimer : TIMER  := [347445,3000,0];
			PressureSwitchTimer : TIMER  := [698173,1500,0];
			PressureSwitchTimer2 : TIMER  := [3535038,1500,0];
			RegPhotoEyeJamTImer : TIMER  := [891480,4000,0];
			ResetDurationTimer : TIMER  := [0,0,0];
			SaveDelayTImer : TIMER  := [997869,250,0];
			testjrl : REAL (RADIX := Float) := 8.00000000e+002;
			testjrl2 : BOOL (RADIX := Decimal) := 1;
			TuckGluePhotoEyeJamTImer : TIMER  := [892333,4000,0];
			TurnSectionPhotoEyeJamTImer : TIMER  := [894237,4000,0];
		END_TAG

		ROUTINE CommToCapway 
				N: XIC(CustomerSIgnal2)OTE(KliklokPLC_Comm_To_CapwayPLC.BOOL_Data[0]);
				N: OTE(KliklokPLC_Comm_To_CapwayPLC.Heart_Beat);
		END_ROUTINE

		ROUTINE P00_MainRoutine 
				N: XIC(S:FS)JSR(R01_StartUpScan,0);
				N: JSR(R03_FaultLogic,0);
				N: JSR(R06_FaultStatus,0);
				N: JSR(R09_Outputs,0);
				N: JSR(R10_Recipe,0);
				N: JSR(CommToCapway,0);
				N: XIO(MTR_Temp_Dwell.DN)TON(MTR_Temp_Dwell,?,?);
				N: XIC(MTR_Temp_Dwell.DN)[CPT(ArticleBucketPusher_Tags.MotorTemp,MtrTempC_BucketPusher*9/5+32) ,CPT(ArticleBucketRetard_Tags.MotorTemp,MtrTempC_BucketRetard*9/5+32) ,CPT(OverheadConfiner_Tags.MotorTemp,MtrTempC_OverheadConfiner*9/5+32) ,CPT(PusherChain_Tags.MotorTemp,MtrTempC_Pusher*9/5+32) ,CPT(RetardChain_Tags.MotorTemp,MtrTempC_Retard*9/5+32) ,CPT(LoadSideTucker_Tags.MotorTemp,MtrTempC_LSTucker*9/5+32) ,CPT(NonLoadSideTucker_Tags.MotorTemp,MtrTempC_NLSTucker2*9/5+32) ,CPT(NonLoadSideTucker2_Tags.MotorTemp,MtrTempC_NLSTucker*9/5+32) ,CPT(Feeder_Tags.MotorTemp,MtrTempC_Feeder*9/5+32) ];
				N: XIC(ArticleBucketPresent)GRT(MTR_Temp_Dwell.ACC,1000)ONS(tempOneShot)[MSG(MSG_Mtr_TempC_BucketPusher) ,XIC(MSG_Mtr_TempC_BucketPusher.ER) MOV(0,MtrTempC_BucketPusher) ];
				N: XIC(ArticleBucketPresent)GRT(MTR_Temp_Dwell.ACC,2000)ONS(tempOneShot2)[MSG(MSG_Mtr_TempC_BucketRetard) ,XIC(MSG_Mtr_TempC_BucketRetard.ER) MOV(0,MtrTempC_BucketRetard) ];
				N: GRT(MTR_Temp_Dwell.ACC,3000)ONS(tempOneShot3)[MSG(MSG_Mtr_TempC_OverheadConfiner) ,XIC(MSG_Mtr_TempC_OverheadConfiner.ER) MOV(0,MtrTempC_OverheadConfiner) ];
				N: GRT(MTR_Temp_Dwell.ACC,4000)ONS(tempOneShot4)[MSG(MSG_Mtr_TempC_Pusher) ,XIC(MSG_Mtr_TempC_Pusher.ER) MOV(0,MtrTempC_Pusher) ];
				N: GRT(MTR_Temp_Dwell.ACC,5000)ONS(tempOneShot5)[MSG(MSG_Mtr_TempC_Retard) ,XIC(MSG_Mtr_TempC_Retard.ER) MOV(0,MtrTempC_Retard) ];
				N: GRT(MTR_Temp_Dwell.ACC,6000)ONS(tempOneShot6)[MSG(MSG_Mtr_TempC_LoadSideTucker) ,XIC(MSG_Mtr_TempC_LoadSideTucker.ER) MOV(0,MtrTempC_LSTucker) ];
				N: GRT(MTR_Temp_Dwell.ACC,7000)ONS(tempOneShot7)[MSG(MSG_Mtr_TempC_NonLoadSideTucker) ,XIC(MSG_Mtr_TempC_NonLoadSideTucker.ER) MOV(0,MtrTempC_NLSTucker) ];
				N: XIC(NonLoadSideTucker2Present)GRT(MTR_Temp_Dwell.ACC,8000)ONS(tempOneShot8)[MSG(MSG_Mtr_TempC_NonLoadSideTucker2) ,XIC(MSG_Mtr_TempC_NonLoadSideTucker2.ER) MOV(0,MtrTempC_NLSTucker2) ];
				N: GRT(MTR_Temp_Dwell.ACC,9000)ONS(tempOneShot9)[MSG(MSG_Mtr_TempC_Feeder) ,XIC(MSG_Mtr_TempC_Feeder.ER) MOV(0,MtrTempC_Feeder) ];
		END_ROUTINE

		ROUTINE R01_StartUpScan 
		END_ROUTINE

		ROUTINE R03_FaultLogic 
				RC: "Fault 1$N"
				    "Estop Button - Operators Panel";
				N: XIC(Estop_OperatorsPanel)OTL(ErrorNum[1])OTL(FaultPresent)EQU(StopFor1,0)MOV(1,StopFor1);
				RC: "Fault 1 Reset";
				N: XIO(Estop_OperatorsPanel)[OTU(ErrorNum[1]) ,XIC(ResetSignal) EQU(StopFor1,1) MOV(0,StopFor1) ];
				RC: "Fault 2$N"
				    "Estop Button - Load Side Discharge";
				N: XIC(Estop_LSDischarge)OTL(ErrorNum[2])OTL(FaultPresent)EQU(StopFor1,0)MOV(2,StopFor1);
				RC: "Fault 2$N"
				    "Reset";
				N: XIO(Estop_LSDischarge)[OTU(ErrorNum[2]) ,XIC(ResetSignal) EQU(StopFor1,2) MOV(0,StopFor1) ];
				RC: "Fault 3$N"
				    "Estop Button - Load Side Infeed";
				N: XIC(Estop_LSInfeed)XIO(Reset_Active)OTL(ErrorNum[3])OTL(FaultPresent)EQU(StopFor1,0)MOV(3,StopFor1);
				RC: "Fault 3$N"
				    "Reset";
				N: XIO(Estop_LSInfeed)[OTU(ErrorNum[3]) ,XIC(ResetSignal) EQU(StopFor1,3) MOV(0,StopFor1) ];
				RC: "Fault 4$N"
				    "Estop Button - Non-Load Side Infeed";
				N: XIC(Estop_NLSInfeed)OTL(ErrorNum[4])OTL(FaultPresent)EQU(StopFor1,0)MOV(4,StopFor1);
				RC: "Fault 4$N"
				    "Reset";
				N: XIO(Estop_NLSInfeed)[OTU(ErrorNum[4]) ,XIC(ResetSignal) EQU(StopFor1,4) MOV(0,StopFor1) ];
				RC: "Fault 5$N"
				    "Estop Button - Non-Load Side Discharge";
				N: XIC(Estop_NLSDischarge)OTL(ErrorNum[5])OTL(FaultPresent)EQU(StopFor1,0)MOV(5,StopFor1);
				RC: "Fault 5$N"
				    "Reset";
				N: XIO(Estop_NLSDischarge)[OTU(ErrorNum[5]) ,XIC(ResetSignal) EQU(StopFor1,5) MOV(0,StopFor1) ];
				RC: "Fault 6$N"
				    "Estop - Pull Cord";
				N: XIC(AlwaysOff)OTL(ErrorNum[6])OTL(FaultPresent)EQU(StopFor1,0)MOV(6,StopFor1);
				RC: "Fault 6$N"
				    "Reset";
				N: XIO(AlwaysOff)[OTU(ErrorNum[6]) ,XIC(ResetSignal) EQU(StopFor1,6) MOV(0,StopFor1) ];
				RC: "Fault 7$N"
				    "Estop - Infeed";
				N: XIC(Estop_Infeed)OTL(ErrorNum[7])OTL(FaultPresent)EQU(StopFor1,0)MOV(7,StopFor1);
				RC: "Fault 7$N"
				    "Reset";
				N: XIO(Estop_Infeed)[OTU(ErrorNum[7]) ,XIC(ResetSignal) EQU(StopFor1,7) MOV(0,StopFor1) ];
				RC: "Fault 8$N"
				    "Safety Interlock - Hopper Gate Not Present Fault";
				N: XIC(HopperGatePresentInterlock)OTL(ErrorNum[8])OTL(FaultPresent)EQU(StopFor1,0)MOV(8,StopFor1);
				RC: "Fault 8$N"
				    "Reset";
				N: XIO(HopperGatePresentInterlock)[OTU(ErrorNum[8]) ,XIC(ResetSignal) EQU(StopFor1,8) MOV(0,StopFor1) ];
				RC: "Fault 9$N"
				    "Safety Interlock - Load Side HopperEmpty Sensor Not Present";
				N: XIC(LoadSideHopperEmptySensorInterlock)OTL(ErrorNum[9])OTL(FaultPresent)EQU(StopFor1,0)MOV(9,StopFor1);
				RC: "Fault 9$N"
				    "Reset";
				N: XIO(LoadSideHopperEmptySensorInterlock)[OTU(ErrorNum[9]) ,XIC(ResetSignal) EQU(StopFor1,9) MOV(0,StopFor1) ];
				RC: "Fault 10$N"
				    "Safety Interlock - Non Load Side HopperEmpty Sensor Not Present";
				N: XIC(NonLoadSideHopperEmptySensorInterlock)OTL(ErrorNum[10])OTL(FaultPresent)EQU(StopFor1,0)MOV(10,StopFor1);
				RC: "Fault 10$N"
				    "Reset";
				N: XIO(NonLoadSideHopperEmptySensorInterlock)[OTU(ErrorNum[10]) ,XIC(ResetSignal) EQU(StopFor1,10) MOV(0,StopFor1) ];
				RC: "Fault 13$N"
				    "Door Interlock - Inserter Cover";
				N: XIC(DoorInterlock_InserterCover)OTL(ErrorNum[13])OTL(FaultPresent)EQU(StopFor1,0)MOV(13,StopFor1);
				RC: "Fault 13$N"
				    "Reset";
				N: XIO(DoorInterlock_InserterCover)[OTU(ErrorNum[13]) ,XIC(ResetSignal) EQU(StopFor1,13) MOV(0,StopFor1) ];
				RC: "Fault 14$N"
				    "Door Interlock - Open Flap Reject Load Side";
				N: XIC(HMI_RejectEnabled)XIC(CoderReadySignal)OTL(ErrorNum[14])OTL(FaultPresent)EQU(StopFor1,0)MOV(14,StopFor1);
				RC: "Fault 14$N"
				    "Reset";
				N: [XIO(CoderReadySignal) ,XIO(HMI_RejectEnabled) ][OTU(ErrorNum[14]) ,XIC(ResetSignal) EQU(StopFor1,14) MOV(0,StopFor1) ];
				RC: "Fault 15$N"
				    "Door Interlock - Open Flap Reject Non-Load Side";
				N: XIC(HMI_RejectEnabled)XIC(AlwaysOff)OTL(ErrorNum[15])OTL(FaultPresent)EQU(StopFor1,0)MOV(15,StopFor1);
				RC: "Fault 15$N"
				    "Reset";
				N: XIO(AlwaysOff)[OTU(ErrorNum[15]) ,XIC(ResetSignal) EQU(StopFor1,15) MOV(0,StopFor1) ];
				RC: "Fault 16$N"
				    "Door Interlock Non-Load Side Main 2";
				N: XIC(DoorInterlock_NLSMain2)OTL(ErrorNum[16])OTL(FaultPresent)EQU(StopFor1,0)MOV(16,StopFor1);
				RC: "Fault 16$N"
				    "Reset";
				N: XIO(DoorInterlock_NLSMain2)[OTU(ErrorNum[16]) ,XIC(ResetSignal) EQU(StopFor1,16) MOV(0,StopFor1) ];
				RC: "Fault 17$N"
				    "Door Interlock Non-Load Side Main 1";
				N: XIC(DoorInterlock_NLSMain1)OTL(ErrorNum[17])OTL(FaultPresent)EQU(StopFor1,0)MOV(17,StopFor1);
				RC: "Fault 17$N"
				    "Reset";
				N: XIO(DoorInterlock_NLSMain1)[OTU(ErrorNum[17]) ,XIC(ResetSignal) EQU(StopFor1,17) MOV(0,StopFor1) ];
				RC: "Fault 18$N"
				    "Door Interlock Load Side Main 2";
				N: XIC(DoorInterlock_LSMain2)OTL(ErrorNum[18])OTL(FaultPresent)EQU(StopFor1,0)MOV(18,StopFor1);
				RC: "Fault 18$N"
				    "Reset";
				N: XIO(DoorInterlock_LSMain2)[OTU(ErrorNum[18]) ,XIC(ResetSignal) EQU(StopFor1,18) MOV(0,StopFor1) ];
				RC: "Fault 19$N"
				    "Door Interlock Load Side Main 1";
				N: XIC(DoorInterlock_LSMain1)OTL(ErrorNum[19])OTL(FaultPresent)EQU(StopFor1,0)MOV(19,StopFor1);
				RC: "Fault 19$N"
				    "Reset";
				N: XIO(DoorInterlock_LSMain1)[OTU(ErrorNum[19]) ,XIC(ResetSignal) EQU(StopFor1,19) MOV(0,StopFor1) ];
				RC: "Fault 20$N"
				    "Door Interlock Load Side Discharge";
				N: XIC(DoorInterlock_LSDischarge)OTL(ErrorNum[20])OTL(FaultPresent)EQU(StopFor1,0)MOV(20,StopFor1);
				RC: "Fault 20$N"
				    "Reset";
				N: XIO(DoorInterlock_LSDischarge)[OTU(ErrorNum[20]) ,XIC(ResetSignal) EQU(StopFor1,20) MOV(0,StopFor1) ];
				RC: "Fault 21$N"
				    "Door Interlock Non-Load Side Discharge";
				N: XIC(DoorInterlock_NLSDischarge)OTL(ErrorNum[21])OTL(FaultPresent)EQU(StopFor1,0)MOV(21,StopFor1);
				RC: "Fault 21$N"
				    "Reset";
				N: XIO(DoorInterlock_NLSDischarge)[OTU(ErrorNum[21]) ,XIC(ResetSignal) EQU(StopFor1,21) MOV(0,StopFor1) ];
				RC: "Fault 22$N"
				    "Door Interlock Load Side Infeed";
				N: XIC(DoorInterlock_LSInfeed)OTL(ErrorNum[22])OTL(FaultPresent)EQU(StopFor1,0)MOV(22,StopFor1);
				RC: "Fault 22$N"
				    "Reset";
				N: XIO(DoorInterlock_LSInfeed)[OTU(ErrorNum[22]) ,XIC(ResetSignal) EQU(StopFor1,22) MOV(0,StopFor1) ];
				RC: "Fault 23$N"
				    "Door Interlock Non-Load Side Infeed";
				N: XIC(DoorInterlock_NLSInfeed)OTL(ErrorNum[23])OTL(FaultPresent)EQU(StopFor1,0)MOV(23,StopFor1);
				RC: "Fault 23";
				N: XIO(DoorInterlock_NLSInfeed)[OTU(ErrorNum[23]) ,XIC(ResetSignal) EQU(StopFor1,23) MOV(0,StopFor1) ];
				RC: "Fault 24$N"
				    "Door Interlock Cat Flap";
				N: XIC(DoorInterlock_CatFlap)OTL(ErrorNum[24])OTL(FaultPresent)EQU(StopFor1,0)MOV(24,StopFor1);
				RC: "Fault 24$N"
				    "Reset";
				N: XIO(DoorInterlock_CatFlap)[OTU(ErrorNum[24]) ,XIC(ResetSignal) EQU(StopFor1,24) MOV(0,StopFor1) ];
				RC: "Fault 25$N"
				    "Load Side Hopper Empty Fault";
				N: XIO(LoadSideHopperEmptySensor)OTL(ErrorNum[25])OTL(FaultPresent)EQU(StopFor1,0)MOV(25,StopFor1);
				RC: "Fault 25$N"
				    "Reset";
				N: XIC(LoadSideHopperEmptySensor)XIC(ResetSignal)[OTU(ErrorNum[25]) ,XIC(ResetSignal) EQU(StopFor1,25) MOV(0,StopFor1) ];
				RC: "Fault 26$N"
				    "Non Load Side Hopper Empty Fault";
				N: XIO(NonLoadSideHopperEmptySensor)OTL(ErrorNum[26])OTL(FaultPresent)EQU(StopFor1,0)MOV(26,StopFor1);
				RC: "Fault 26$N"
				    "Reset";
				N: XIC(NonLoadSideHopperEmptySensor)XIC(ResetSignal)[OTU(ErrorNum[26]) ,XIC(ResetSignal) EQU(StopFor1,26) MOV(0,StopFor1) ];
				RC: "Fault 27$N"
				    "Door Interlock Load Side Infeed";
				N: XIC(DoorInterlock_Discharge)OTL(ErrorNum[27])OTL(FaultPresent)EQU(StopFor1,0)MOV(27,StopFor1);
				RC: "Fault 27$N"
				    "Reset";
				N: XIO(DoorInterlock_Discharge)[OTU(ErrorNum[27]) ,XIC(ResetSignal) EQU(StopFor1,27) MOV(0,StopFor1) ];
				RC: "Fault 28$N"
				    "Upstream Safety Interlock Fault";
				N: XIC(DoorInterlock_InserterCover2)OTL(ErrorNum[28])OTL(FaultPresent)EQU(StopFor1,0)MOV(28,StopFor1);
				RC: "Fault 28$N"
				    "Reset";
				N: XIO(DoorInterlock_InserterCover2)[OTU(ErrorNum[28]) ,XIC(ResetSignal) EQU(StopFor1,28) MOV(0,StopFor1) ];
				RC: "Fault 29$N"
				    "MCR Fault$N"
				    "All safety inputs are off, but the MCR is not resetting.";
				N: XIO(MCRIinput)XIO(ResetSignal)XIO(FaultCurrentlyPresent)TON(MCRFaultDelayTimer,?,?)XIC(MCRFaultDelayTimer.DN)OTL(ErrorNum[29])OTL(FaultPresent)EQU(StopFor1,0)MOV(29,StopFor1);
				RC: "Fault 29$N"
				    "Reset";
				N: [XIC(MCRIinput) ,XIC(FaultCurrentlyPresent) ,XIC(ResetSignal) ][OTU(ErrorNum[29]) ,XIC(ResetSignal) EQU(StopFor1,29) MOV(0,StopFor1) ];
				N: [XIC(S:FS) ,XIC(BootUp_Timer.EN) ]TON(BootUp_Timer,?,?);
				RC: "Fault 30$N"
				    "Feeder Servo Axis Fault";
				N: [NEQ(MTR_Feeder.AxisFault,0) MOV(MTR_Feeder.AxisFault,AxisFault) ,XIC(MTR_Feeder.ModuleFault) OTL(ModuleFault) ]OTL(ErrorNum[30])OTL(FaultPresent)EQU(StopFor1,0)MOV(30,StopFor1);
				RC: "Fault 30$N"
				    "Reset";
				N: EQU(MTR_Feeder.AxisFault,0)XIO(MTR_Feeder.ModuleFault)XIC(ResetSignal)[OTU(ErrorNum[30]) ,EQU(StopFor1,30) MOV(0,StopFor1) ];
				RC: "Fault 31$N"
				    "Feeder Servo Initialize Fault";
				N: XIC(Feeder_Tags.InitializeFault)OTL(ErrorNum[31])OTL(FaultPresent)EQU(StopFor1,0)MOV(31,StopFor1);
				RC: "Fault 31 Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[31]) OTU(Feeder_Tags.InitializeFault) ,EQU(StopFor1,31) MOV(0,StopFor1) ];
				RC: "Fault 32$N"
				    "Feeder Servo Cam Fault";
				N: XIC(Feeder_Tags.CamFault)OTL(ErrorNum[32])OTL(FaultPresent)EQU(StopFor1,0)MOV(32,StopFor1);
				RC: "Fault 32$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[32]) OTU(Feeder_Tags.CamFault) ,EQU(StopFor1,32) MOV(0,StopFor1) ];
				RC: "Fault 33$N"
				    "Feeder Servo Homing Fault";
				N: XIC(Feeder_Tags.Homing_Fault)OTL(ErrorNum[33])OTL(FaultPresent)EQU(StopFor1,0)MOV(33,StopFor1);
				RC: "Fault 33$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(Feeder_Tags.Homing_Fault) OTU(ErrorNum[33]) ,EQU(StopFor1,33) MOV(0,StopFor1) ];
				RC: "Fault 34$N"
				    "Pusher Servo Axis Fault";
				N: [NEQ(MTR_PusherChain.AxisFault,0) ,XIC(MTR_PusherChain.ModuleFault) ]OTL(ErrorNum[34])OTL(FaultPresent)EQU(StopFor1,0)MOV(34,StopFor1);
				RC: "Fault 34$N"
				    "Reset";
				N: EQU(MTR_PusherChain.AxisFault,0)XIO(MTR_PusherChain.ModuleFault)XIC(ResetSignal)[OTU(ErrorNum[34]) ,EQU(StopFor1,34) MOV(0,StopFor1) ];
				RC: "Fault 35$N"
				    "Pusher Chain Initialize Fault";
				N: XIC(PusherChain_Tags.InitializeFault)OTL(ErrorNum[35])OTL(FaultPresent)EQU(StopFor1,0)MOV(35,StopFor1);
				RC: "Fault 35$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[35]) OTU(PusherChain_Tags.InitializeFault) ,EQU(StopFor1,35) MOV(0,StopFor1) ];
				RC: "Fault 36$N"
				    "Pusher Chain Cam Fault";
				N: XIC(PusherChain_Tags.CamFault)OTL(ErrorNum[36])OTL(FaultPresent)EQU(StopFor1,0)MOV(36,StopFor1);
				RC: "Fault 36$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[36]) OTU(PusherChain_Tags.CamFault) ,EQU(StopFor1,36) MOV(0,StopFor1) ];
				RC: "Fault 37$N"
				    "Pusher Chain Servo Homing Fault";
				N: XIC(PusherChain_Tags.Homing_Fault)OTL(ErrorNum[37])OTL(FaultPresent)EQU(StopFor1,0)MOV(37,StopFor1);
				RC: "Fautl 37 $N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(PusherChain_Tags.Homing_Fault) OTU(ErrorNum[37]) ,EQU(StopFor1,37) MOV(0,StopFor1) ];
				RC: "Fault 38$N"
				    "Article Bucket Servo Axis Fault";
				N: [NEQ(MTR_ArticleBucket_Pusher.AxisFault,0) ,XIC(MTR_ArticleBucket_Pusher.ModuleFault) ]OTL(ErrorNum[38])OTL(FaultPresent)EQU(StopFor1,0)MOV(38,StopFor1);
				RC: "Fault 38$N"
				    "Reset";
				N: EQU(MTR_ArticleBucket_Pusher.AxisFault,0)XIO(MTR_ArticleBucket_Pusher.ModuleFault)XIC(ResetSignal)[OTU(ErrorNum[38]) ,EQU(StopFor1,38) MOV(0,StopFor1) ];
				RC: "Fault 39$N"
				    "Article Bucket Servo Initialize Fault";
				N: XIC(ArticleBucketPusher_Tags.InitializeFault)OTL(ErrorNum[39])OTL(FaultPresent)EQU(StopFor1,0)MOV(39,StopFor1);
				RC: "Fault 39$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[39]) OTU(ArticleBucketPusher_Tags.InitializeFault) ,EQU(StopFor1,39) MOV(0,StopFor1) ];
				RC: "Fault 40$N"
				    "Article Bucket Servo Cam Fault";
				N: XIC(ArticleBucketPusher_Tags.CamFault)OTL(ErrorNum[40])OTL(FaultPresent)EQU(StopFor1,0)MOV(40,StopFor1);
				RC: "Fault 40$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[40]) OTU(ArticleBucketPusher_Tags.CamFault) ,EQU(StopFor1,40) MOV(0,StopFor1) ];
				RC: "Fault 41$N"
				    "Article Bucket Servo Homing Fault";
				N: XIC(ArticleBucketPusher_Tags.Homing_Fault)OTL(ErrorNum[41])OTL(FaultPresent)EQU(StopFor1,0)MOV(41,StopFor1);
				RC: "Fault 41$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ArticleBucketPusher_Tags.Homing_Fault) OTU(ErrorNum[41]) ,EQU(StopFor1,41) MOV(0,StopFor1) ];
				RC: "Fault 42$N"
				    "Retard Chain Servo Axis Fault";
				N: [NEQ(MTR_RetardChain.AxisFault,0) ,XIC(MTR_RetardChain.ModuleFault) ]OTL(ErrorNum[42])OTL(FaultPresent)EQU(StopFor1,0)MOV(42,StopFor1);
				RC: "Fault 42$N"
				    "Reset";
				N: EQU(MTR_RetardChain.AxisFault,0)XIO(MTR_RetardChain.ModuleFault)XIC(ResetSignal)[OTU(ErrorNum[42]) ,EQU(StopFor1,42) MOV(0,StopFor1) ];
				RC: "Fault 43$N"
				    "Retard Chain Servo Initilaize Fault";
				N: XIC(RetardChain_Tags.InitializeFault)OTL(ErrorNum[43])OTL(FaultPresent)EQU(StopFor1,0)MOV(43,StopFor1);
				RC: "Fault 43$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[43]) OTU(RetardChain_Tags.InitializeFault) ,EQU(StopFor1,43) MOV(0,StopFor1) ];
				RC: "Fault 44$N"
				    "Retard Chain Servo Cam Fault";
				N: XIC(RetardChain_Tags.CamFault)OTL(ErrorNum[44])OTL(FaultPresent)EQU(StopFor1,0)MOV(44,StopFor1);
				RC: "Fault 44$N"
				    " Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[44]) OTU(RetardChain_Tags.CamFault) ,EQU(StopFor1,44) MOV(0,StopFor1) ];
				RC: "Fault 45$N"
				    "Retard Chain Servo Homing Fault";
				N: XIC(RetardChain_Tags.Homing_Fault)OTL(ErrorNum[45])OTL(FaultPresent)EQU(StopFor1,0)MOV(45,StopFor1);
				RC: "Fault 45$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(RetardChain_Tags.Homing_Fault) OTU(ErrorNum[45]) ,EQU(StopFor1,45) MOV(0,StopFor1) ];
				RC: "Fault 46$N"
				    "Load Side Tucker Servo Axis Fault";
				N: [NEQ(MTR_LoadSideTucker.AxisFault,0) ,XIC(MTR_LoadSideTucker.ModuleFault) ]OTL(ErrorNum[46])OTL(FaultPresent)EQU(StopFor1,0)MOV(46,StopFor1);
				RC: "Fault 46$N"
				    "Reset";
				N: EQU(MTR_LoadSideTucker.AxisFault,0)XIO(MTR_LoadSideTucker.ModuleFault)XIC(ResetSignal)[OTU(ErrorNum[46]) ,EQU(StopFor1,46) MOV(0,StopFor1) ];
				RC: "Fault 47$N"
				    "Load Side Tucker Servo Initialize Fault";
				N: XIC(LoadSideTucker_Tags.InitializeFault)OTL(ErrorNum[47])OTL(FaultPresent)EQU(StopFor1,0)MOV(47,StopFor1);
				RC: "Fault 47$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[47]) OTU(LoadSideTucker_Tags.InitializeFault) ,EQU(StopFor1,47) MOV(0,StopFor1) ];
				RC: "Fault 48$N"
				    "Load Side Tucker Servo Cam Fault";
				N: XIC(LoadSideTucker_Tags.CamFault)OTL(ErrorNum[48])OTL(FaultPresent)EQU(StopFor1,0)MOV(48,StopFor1);
				RC: "Fault 48$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[48]) OTU(LoadSideTucker_Tags.CamFault) ,EQU(StopFor1,48) MOV(0,StopFor1) ];
				RC: "Fault 49$N"
				    "Load Side Tucker Servo Homing Fault";
				N: XIC(LoadSideTucker_Tags.Homing_Fault)OTL(ErrorNum[49])OTL(FaultPresent)EQU(StopFor1,0)MOV(49,StopFor1);
				RC: "Fault 49$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(LoadSideTucker_Tags.Homing_Fault) OTU(ErrorNum[49]) ,EQU(StopFor1,49) MOV(0,StopFor1) ];
				RC: "Fault 50$N"
				    " Non Load Side Tucker Servo Axis Fault";
				N: [NEQ(MTR_NonLoadSideTucker.AxisFault,0) ,XIC(MTR_NonLoadSideTucker.ModuleFault) ]OTL(ErrorNum[50])OTL(FaultPresent)EQU(StopFor1,0)MOV(50,StopFor1);
				RC: "Fault 50$N"
				    "Reset";
				N: EQU(MTR_NonLoadSideTucker.AxisFault,0)XIO(MTR_NonLoadSideTucker.ModuleFault)XIC(ResetSignal)[OTU(ErrorNum[50]) ,EQU(StopFor1,50) MOV(0,StopFor1) ];
				RC: "Fault 51$N"
				    " Non Load Side Tucker Servo Initialize Fault";
				N: XIC(NonLoadSideTucker_Tags.InitializeFault)OTL(ErrorNum[51])OTL(FaultPresent)EQU(StopFor1,0)MOV(51,StopFor1);
				RC: "Fault 51$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[51]) OTU(NonLoadSideTucker_Tags.InitializeFault) ,EQU(StopFor1,51) MOV(0,StopFor1) ];
				RC: "Fault 52$N"
				    " Non Load Side Tucker Servo Cam Fault";
				N: XIC(NonLoadSideTucker_Tags.CamFault)OTL(ErrorNum[52])OTL(FaultPresent)EQU(StopFor1,0)MOV(52,StopFor1);
				RC: "Fault 52$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[52]) OTU(NonLoadSideTucker_Tags.CamFault) ,EQU(StopFor1,52) MOV(0,StopFor1) ];
				RC: "Fault 53$N"
				    " Non Load Side Tucker Servo Homing Fault";
				N: XIC(NonLoadSideTucker_Tags.Homing_Fault)OTL(ErrorNum[53])OTL(FaultPresent)EQU(StopFor1,0)MOV(53,StopFor1);
				RC: "Fault 53$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(NonLoadSideTucker_Tags.Homing_Fault) OTU(ErrorNum[53]) ,EQU(StopFor1,53) MOV(0,StopFor1) ];
				RC: "Fault 54$N"
				    "Overhead Confiner Servo Axis Fault";
				N: XIC(OverheadConfinerPresent)[NEQ(MTR_OverheadConfiner.AxisFault,0) ,XIC(MTR_OverheadConfiner.ModuleFault) ]OTL(ErrorNum[54])OTL(FaultPresent)EQU(StopFor1,0)MOV(54,StopFor1);
				RC: "Fault 54$N"
				    "Reset";
				N: EQU(MTR_OverheadConfiner.AxisFault,0)XIO(MTR_OverheadConfiner.ModuleFault)XIC(ResetSignal)[OTU(ErrorNum[54]) ,EQU(StopFor1,54) MOV(0,StopFor1) ];
				RC: "Fault 55$N"
				    "OverheadConfiner Servo Initialize Fault";
				N: XIC(OverheadConfinerPresent)XIC(OverheadConfiner_Tags.InitializeFault)OTL(ErrorNum[55])OTL(FaultPresent)EQU(StopFor1,0)MOV(55,StopFor1);
				RC: "Fault 55$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[55]) OTU(OverheadConfiner_Tags.InitializeFault) ,EQU(StopFor1,55) MOV(0,StopFor1) ];
				RC: "Fault 56$N"
				    "Overhead Confinerr Servo Cam Fault";
				N: XIC(OverheadConfinerPresent)XIC(OverheadConfiner_Tags.CamFault)OTL(ErrorNum[56])OTL(FaultPresent)EQU(StopFor1,0)MOV(56,StopFor1);
				RC: "Fault 56$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[56]) OTU(OverheadConfiner_Tags.CamFault) ,EQU(StopFor1,56) MOV(0,StopFor1) ];
				RC: "Fault 57$N"
				    "OverheadConfiner Servo Homing Fault";
				N: XIC(OverheadConfinerPresent)XIC(OverheadConfiner_Tags.Homing_Fault)OTL(ErrorNum[57])OTL(FaultPresent)EQU(StopFor1,0)MOV(57,StopFor1);
				RC: "Fault 57$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(OverheadConfiner_Tags.Homing_Fault) OTU(ErrorNum[57]) ,EQU(StopFor1,57) MOV(0,StopFor1) ];
				RC: "Fault 58$N"
				    "Discharge Belts VFD Fault";
				N: XIC(DischargeBelts_Tags.InitializeFault)OTL(ErrorNum[58])OTL(FaultPresent)EQU(StopFor1,0)MOV(58,StopFor1);
				RC: "Fault 58$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(DischargeBelts_Tags.InitializeFault) OTU(ErrorNum[58]) ,EQU(StopFor1,58) MOV(0,StopFor1) ];
				RC: "Fault 59$N"
				    "Hopper Belts VFD Fault";
				N: XIC(HopperBelts_Tags.InitializeFault)OTL(ErrorNum[59])OTL(FaultPresent)EQU(StopFor1,0)MOV(59,StopFor1);
				RC: "Fault 59$N"
				    "Rese";
				N: XIC(ResetSignal)[OTU(HopperBelts_Tags.InitializeFault) OTU(ErrorNum[59]) ,EQU(StopFor1,59) MOV(0,StopFor1) ];
				RC: "Fault 60$N"
				    "Article Bucket Retard Servo Axis Fault";
				N: [NEQ(MTR_ArticleBucket_Retard.AxisFault,0) ,XIC(MTR_ArticleBucket_Retard.ModuleFault) ]OTL(ErrorNum[60])OTL(FaultPresent)EQU(StopFor1,0)MOV(60,StopFor1);
				RC: "Fault 60$N"
				    "Reset";
				N: EQU(MTR_ArticleBucket_Retard.AxisFault,0)XIO(MTR_ArticleBucket_Retard.ModuleFault)XIC(ResetSignal)[OTU(ErrorNum[60]) ,EQU(StopFor1,60) MOV(0,StopFor1) ];
				RC: "Fault 61$N"
				    "MTR_ArticleBucket_Retard Servo Initialize Fault";
				N: XIC(ArticleBucketRetard_Tags.InitializeFault)OTL(ErrorNum[61])OTL(FaultPresent)EQU(StopFor1,0)MOV(61,StopFor1);
				RC: "Fault 61$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[61]) OTU(ArticleBucketRetard_Tags.InitializeFault) ,EQU(StopFor1,61) MOV(0,StopFor1) ];
				RC: "Fault 62$N"
				    "MTR_ArticleBucket_Retard Servo Cam Fault";
				N: XIC(ArticleBucketRetard_Tags.CamFault)OTL(ErrorNum[62])OTL(FaultPresent)EQU(StopFor1,0)MOV(62,StopFor1);
				RC: "Fault 62$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[62]) OTU(ArticleBucketRetard_Tags.CamFault) ,EQU(StopFor1,62) MOV(0,StopFor1) ];
				RC: "Fault 63$N"
				    "MTR_ArticleBucket_Retard Servo Homing Fault";
				N: XIC(ArticleBucketRetard_Tags.Homing_Fault)OTL(ErrorNum[63])OTL(FaultPresent)EQU(StopFor1,0)MOV(63,StopFor1);
				RC: "Fault 63$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(OverheadConfiner_Tags.Homing_Fault) OTU(ErrorNum[63]) ,EQU(StopFor1,63) MOV(0,StopFor1) ];
				N: [GRT(MTR_PusherChain.ActualVelocity,0.05) CPT(JamTimerDuration,1250*(12/MTR_PusherChain.ActualVelocity)) ,LEQ(MTR_PusherChain.ActualVelocity,0.05) MOV(5000,JamTimerDuration) ,MOV(JamTimerDuration,GluePhotoEyeJamTImer.PRE) ,MOV(JamTimerDuration,DischargeJamTimer.PRE) ];
				RC: "Fault 64$N"
				    "Inserter Jam Relief Fault";
				N: [XIO(InserterJamReliefSensor) ,XIC(InserterJamReliefSensor2) ][XIC(MachineRunning) ,XIC(ManualModeActive) ]OTL(ErrorNum[64])OTL(FaultPresent)EQU(StopFor1,0)MOV(64,StopFor1);
				RC: "Fault 64$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[64]) ,EQU(StopFor1,64) MOV(0,StopFor1) ];
				RC: "Fault 65$N"
				    "Inserter Return Jam Fault";
				N: [XIC(InserterReturnJamProxSensor) ,XIC(InserterReturnJamProxSensor2) ]XIO(Reset_Active)OTL(ErrorNum[65])OTL(FaultPresent)EQU(StopFor1,0)MOV(65,StopFor1);
				RC: "Fault 65$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[65]) ,EQU(StopFor1,65) MOV(0,StopFor1) ];
				RC: "Fault 66$N"
				    "Overhead Confiner Jam Fault";
				N: [XIO(LSOverheadConfinerJamSesnor) ,XIO(NLSOverheadConfinerJamSesnor) ]XIC(OverheadConfinerPresent)OTL(ErrorNum[66])OTL(FaultPresent)EQU(StopFor1,0)MOV(66,StopFor1);
				RC: "Fault 66$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[66]) ,EQU(StopFor1,66) MOV(0,StopFor1) ];
				RC: "Fault 67$N"
				    "Inserter Jam Fault";
				N: XIC(AlwaysOff)OTL(ErrorNum[67])OTL(FaultPresent)EQU(StopFor1,0)MOV(67,StopFor1);
				RC: "Fault 67$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[67]) ,EQU(StopFor1,67) MOV(0,StopFor1) ];
				N: [XIC(PML_State.Sts_Execute) XIO(GlueSensor) OTL(CheckForJam) ,XIO(MachineRunning) OTU(CheckForJam) ];
				RC: "Fault 68$N"
				    "Glue Sensor Jam Fault";
				N: XIC(GlueFaultEnabledHMI)XIC(MachineRunning)XIO(PML_State.Sts_Starting)XIC(CheckForJam)XIC(GlueSensor)TON(GluePhotoEyeJamTImer,?,?);
				N: XIC(GluePhotoEyeJamTImer.DN)OTL(ErrorNum[68])OTL(FaultPresent)EQU(StopFor1,0)MOV(68,StopFor1);
				RC: "Fault 68$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[68]) ,EQU(StopFor1,68) MOV(0,StopFor1) ];
				N: XIC(LowGlueSignal)ONS(LowGlueOneshot)EQU(StopFor1,0)MOV(69,StopFor1);
				RC: "Fault 68$N"
				    "Reset";
				N: XIC(ResetSignal)EQU(StopFor1,69)MOV(0,StopFor1);
				RC: "Fault 71$N"
				    "Air Pressure Fault";
				N: XIC(PressureFaultEnabledHMI)XIO(PML_State.Sts_Aborted)XIO(PressureSensorPostAirDump)TON(PressureSwitchTimer,?,?)XIC(PressureSwitchTimer.DN)OTL(ErrorNum[71])OTL(FaultPresent)EQU(StopFor1,0)MOV(71,StopFor1);
				RC: "Fault 71 Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[71]) ,EQU(StopFor1,71) MOV(0,StopFor1) ];
				N: XIO(ErrorNum[71])XIO(PML_State.Sts_Aborted)OTE(DumpValveEnable);
				RC: "Fault 72$N"
				    "No Glue Fault";
				N: XIC(GlueFaultEnabledHMI)[XIC(NonLoadGlueActive) ,XIC(LoadSideGlueActive) ]XIO(NoGlueSignal)[XIC(PML_State.Sts_Starting) ,XIC(MachineRunning) ]OTL(ErrorNum[72])OTL(FaultPresent)EQU(StopFor1,0)MOV(72,StopFor1);
				RC: "Fault 72$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[72]) ,EQU(StopFor1,72) MOV(0,StopFor1) ];
				RC: "Fault 73$N"
				    "Glue Ready Fault";
				N: XIC(GlueFaultEnabledHMI)[XIC(NonLoadGlueActive) ,XIC(LoadSideGlueActive) ]XIC(PML_State.Sts_Starting)XIO(GlueReadySignal)OTL(ErrorNum[73])OTL(FaultPresent)EQU(StopFor1,0)MOV(73,StopFor1);
				RC: "Fault 73$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[73]) ,EQU(StopFor1,73) MOV(0,StopFor1) ];
				RC: "Fault 74$N"
				    "Overhead Confiner Servo Over Torque Fault";
				N: XIC(OverheadConfiner_Tags.OverTorque_fault)OTL(ErrorNum[74])OTL(FaultPresent)EQU(StopFor1,0)MOV(74,StopFor1);
				RC: "Fault74$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[74]) OTU(OverheadConfiner_Tags.OverTorque_fault) ,EQU(StopFor1,74) MOV(0,StopFor1) ];
				RC: "Fault 75$N"
				    "Feeder Servo Over Torque Fault";
				N: XIC(Feeder_Tags.OverTorque_fault)OTL(ErrorNum[75])OTL(FaultPresent)EQU(StopFor1,0)MOV(75,StopFor1);
				RC: "Fault 75$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[75]) OTU(Feeder_Tags.OverTorque_fault) ,EQU(StopFor1,75) MOV(0,StopFor1) ];
				RC: "Fault 76$N"
				    "Article Bucket Servo Over Torque Fault";
				N: XIC(ArticleBucketPusher_Tags.OverTorque_fault)OTL(ErrorNum[76])OTL(FaultPresent)EQU(StopFor1,0)MOV(76,StopFor1);
				RC: "Fault 76$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[76]) OTU(ArticleBucketPusher_Tags.OverTorque_fault) ,EQU(StopFor1,76) MOV(0,StopFor1) ];
				RC: "Fault 77$N"
				    "Pusher Chain Servo Over Torque Fault";
				N: XIC(PusherChain_Tags.OverTorque_fault)OTL(ErrorNum[77])OTL(FaultPresent)EQU(StopFor1,0)MOV(77,StopFor1);
				RC: "Fault 77$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[77]) OTU(PusherChain_Tags.OverTorque_fault) ,EQU(StopFor1,77) MOV(0,StopFor1) ];
				RC: "Fault 78$N"
				    "Retard Chain Servo Over Torque Fault";
				N: XIC(RetardChain_Tags.OverTorque_fault)OTL(ErrorNum[78])OTL(FaultPresent)EQU(StopFor1,0)MOV(78,StopFor1);
				RC: "Fault 78$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[78]) OTU(RetardChain_Tags.OverTorque_fault) ,EQU(StopFor1,78) MOV(0,StopFor1) ];
				RC: "Fault 79$N"
				    "Load Side Tucker Servo Over Torque Fault";
				N: XIC(LoadSideTucker_Tags.OverTorque_fault)OTL(ErrorNum[79])OTL(FaultPresent)EQU(StopFor1,0)MOV(79,StopFor1);
				RC: "Fault 79$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[79]) OTU(LoadSideTucker_Tags.OverTorque_fault) ,EQU(StopFor1,79) MOV(0,StopFor1) ];
				RC: "Fault 80$N"
				    "Non Load Side Tucker Servo Over Torque Fault";
				N: XIC(NonLoadSideTucker_Tags.OverTorque_fault)OTL(ErrorNum[80])OTL(FaultPresent)EQU(StopFor1,0)MOV(80,StopFor1);
				RC: "Fault 80$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[80]) OTU(NonLoadSideTucker_Tags.OverTorque_fault) ,EQU(StopFor1,80) MOV(0,StopFor1) ];
				RC: "Fault 81$N"
				    "Feeder Servo Safe Off Fault";
				N: XIC(NotAbortedWDelayTimer.DN)XIC(MTR_Feeder.SafeTorqueOffInhibit)OTL(ErrorNum[81])OTL(FaultPresent)EQU(StopFor1,0)MOV(81,StopFor1);
				RC: "Fault 81$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[81]) ,EQU(StopFor1,81) MOV(0,StopFor1) ];
				RC: "Fault 82$N"
				    "Article Bucket Servo Safe Off Fault";
				N: XIC(NotAbortedWDelayTimer.DN)XIC(MTR_ArticleBucket_Pusher.SafeTorqueOffInhibit)OTL(ErrorNum[82])OTL(FaultPresent)EQU(StopFor1,0)MOV(82,StopFor1);
				RC: "Fault 82$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[82]) ,EQU(StopFor1,82) MOV(0,StopFor1) ];
				RC: "Fault 83$N"
				    "Pusher Chain Servo Safe Off Fault";
				N: XIC(NotAbortedWDelayTimer.DN)XIC(MTR_PusherChain.SafeTorqueOffInhibit)OTL(ErrorNum[83])OTL(FaultPresent)EQU(StopFor1,0)MOV(83,StopFor1);
				RC: "Fault 83$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[83]) ,EQU(StopFor1,83) MOV(0,StopFor1) ];
				RC: "Fault 84$N"
				    "Retard Chain Servo Safe Off Fault";
				N: XIC(NotAbortedWDelayTimer.DN)XIC(MTR_RetardChain.SafeTorqueOffInhibit)OTL(ErrorNum[84])OTL(FaultPresent)EQU(StopFor1,0)MOV(84,StopFor1);
				RC: "Fault 84$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[84]) ,EQU(StopFor1,84) MOV(0,StopFor1) ];
				RC: "Fault 85$N"
				    "Load Side Tucker Servo Safe Off Fault";
				N: XIC(NotAbortedWDelayTimer.DN)XIC(MTR_LoadSideTucker.SafeTorqueOffInhibit)OTL(ErrorNum[85])OTL(FaultPresent)EQU(StopFor1,0)MOV(85,StopFor1);
				RC: "Fault 85$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[85]) ,EQU(StopFor1,85) MOV(0,StopFor1) ];
				RC: "Fault 86$N"
				    "Non Load Side Tucker Servo Safe Off Fault";
				N: XIC(NotAbortedWDelayTimer.DN)XIC(MTR_NonLoadSideTucker.SafeTorqueOffInhibit)OTL(ErrorNum[86])OTL(FaultPresent)EQU(StopFor1,0)MOV(86,StopFor1);
				RC: "Fault 86$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[86]) ,EQU(StopFor1,86) MOV(0,StopFor1) ];
				RC: "Fault 87$N"
				    "Article Bucket Retard Servo Over Torque Fault";
				N: XIC(ArticleBucketRetard_Tags.OverTorque_fault)OTL(ErrorNum[87])OTL(FaultPresent)EQU(StopFor1,0)MOV(87,StopFor1);
				RC: "Fault 87$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[87]) OTU(ArticleBucketRetard_Tags.OverTorque_fault) ,EQU(StopFor1,87) MOV(0,StopFor1) ];
				RC: "Fault 88$N"
				    "Article Bucket Retard Servo Safe Off Fault";
				N: XIC(NotAbortedWDelayTimer.DN)XIC(MTR_ArticleBucket_Retard.SafeTorqueOffInhibit)OTL(ErrorNum[88])OTL(FaultPresent)EQU(StopFor1,0)MOV(88,StopFor1);
				RC: "Fault 88$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[88]) ,EQU(StopFor1,88) MOV(0,StopFor1) ];
				N: CPT(CartonFeedingFaultWindowEnd,MTR_ArticleBucket_Pusher.ActualPosition+1)MOD(OverheadConfinerWindowEnd,MachinePitch,OverheadConfinerWindowEnd);
				N: NEQ(MTR_ArticleBucket_Retard.ActualPosition,12)NEQ(MTR_ArticleBucket_Pusher.ActualPosition,12)[GEQ(MTR_ArticleBucket_Retard.ActualPosition,MTR_ArticleBucket_Pusher.ActualPosition) SUB(MTR_ArticleBucket_Retard.ActualPosition,MTR_ArticleBucket_Pusher.ActualPosition,ArticleBucketDelta) ,GEQ(MTR_ArticleBucket_Pusher.ActualPosition,MTR_ArticleBucket_Retard.ActualPosition) CPT(ArticleBucketDelta,MTR_ArticleBucket_Retard.ActualPosition+MachinePitch-MTR_ArticleBucket_Pusher.ActualPosition) ];
				N: LES(ArticleBucketDelta,CartonLengthMax)XIC(testjrl2)OTL(MaxPocketSizeFaultEnabled);
				RC: "Fault 89$N"
				    "Article Bucket Max Pocket Size Fault";
				N: XIC(MaxPocketSizeFaultEnabled)GRT(ArticleBucketDelta,CartonLengthMax)LES(ArticleBucketDelta,MachinePitch)OTL(ErrorNum[89])OTL(FaultPresent)OTU(MaxPocketSizeFaultEnabled)EQU(StopFor1,0)MOV(89,StopFor1);
				RC: "Fault 89$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[89]) ,EQU(StopFor1,89) MOV(0,StopFor1) ];
				RC: "Fault 90$N"
				    "Discharge Jam Fault";
				N: XIC(DischargeJamEnabled)XIO(LSOverheadConfinerJamSesnor)XIO(PML_State.Sts_Starting)TON(DischargeJamTimer,?,?);
				RC: "Fault 90$N"
				    "Discharge Jam Fault";
				N: XIC(DischargeJamTimer.DN)OTL(ErrorNum[90])OTL(FaultPresent)EQU(StopFor1,0)MOV(90,StopFor1);
				RC: "Fault 90$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[90]) ,EQU(StopFor1,90) MOV(0,StopFor1) ];
				N: CPT(CartonFeedingFaultWindowEnd,CartonFeedingFaultWindowStart+(MachinePitch-TotalChainSpacingHMI-1))MOD(CartonFeedingFaultWindowEnd,MachinePitch,CartonFeedingFaultWindowEnd);
				RC: "Fault 91$N"
				    "Carton Feeding Fault";
				N: XIC(FeedingFaultEnabled)XIC(MachineRunning)XIC(CartonSensor)LIM(CartonFeedingFaultWindowStart,MTR_ArticleBucket_Pusher.ActualPosition,CartonFeedingFaultWindowEnd)OTL(ErrorNum[91])OTL(FaultPresent)EQU(StopFor1,0)MOV(91,StopFor1);
				RC: "Fault 91$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[91]) ,EQU(StopFor1,91) MOV(0,StopFor1) ];
				RC: "Fault 92$N"
				    "Abort Jam Fault";
				N: XIC(AbortJamSensorPresent)XIO(AbortJamSensor)TON(AbortJamTimer,?,?)XIC(AbortJamTimer.DN)OTL(ErrorNum[92])OTL(FaultPresent)EQU(StopFor1,0)MOV(92,StopFor1);
				RC: "Fault 92";
				N: XIC(ResetSignal)[OTU(ErrorNum[92]) ,EQU(StopFor1,92) MOV(0,StopFor1) ];
				N: [XIC(AbortJamSensor) OTL(AbortJamSensorPresent) ,XIC(S:FS) OTU(AbortJamSensorPresent) ];
				RC: "Fault 93$N"
				    "To Many Overheight Fault";
				N: XIC(OverheightFaultEnabledHMI)XIC(OverHeightCounter.DN)OTL(ErrorNum[93])OTL(FaultPresent)EQU(StopFor1,0)MOV(93,StopFor1);
				RC: "Fault 93";
				N: XIC(ResetSignal)[OTU(ErrorNum[93]) RES(OverHeightCounter) ,EQU(StopFor1,93) MOV(0,StopFor1) ];
				RC: "Fault 94$N"
				    "Carton Reject Fault";
				N: XIC(CartonRejectFaultCounter.DN)OTL(ErrorNum[94])OTL(FaultPresent)EQU(StopFor1,0)MOV(94,StopFor1);
				RC: "Fault 94$N"
				    "Reset";
				N: XIC(ResetSignal)[RES(CartonRejectFaultCounter) OTU(ErrorNum[94]) ,EQU(StopFor1,94) MOV(0,StopFor1) ];
				RC: "Fault 95$N"
				    "Non Load Side Tucker 2 Servo Over Torque Fault";
				N: XIC(NonLoadSideTucker2_Tags.OverTorque_fault)OTL(ErrorNum[95])OTL(FaultPresent)EQU(StopFor1,0)MOV(95,StopFor1);
				RC: "Fault 95$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[95]) OTU(NonLoadSideTucker2_Tags.OverTorque_fault) ,EQU(StopFor1,95) MOV(0,StopFor1) ];
				RC: "Fault 96$N"
				    "Flapkicker Fault";
				N: XIC(FlapKickerError)TON(FlapKickerErrorDelayTimer,?,?)XIC(FlapKickerErrorDelayTimer.DN)OTL(ErrorNum[96])OTL(FaultPresent)EQU(StopFor1,0)MOV(96,StopFor1);
				RC: "Fault 96$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[96]) ,EQU(StopFor1,96) MOV(0,StopFor1) ];
				RC: "Fault 97$N"
				    " Non Load Side Tucker 2 Servo Axis Fault";
				N: [NEQ(MTR_NonLoadSideTucker2.AxisFault,0) ,XIC(MTR_NonLoadSideTucker2.ModuleFault) ]OTL(ErrorNum[97])OTL(FaultPresent)EQU(StopFor1,0)MOV(97,StopFor1);
				RC: "Fault 97$N"
				    "Reset";
				N: EQU(MTR_NonLoadSideTucker2.AxisFault,0)XIO(MTR_NonLoadSideTucker2.ModuleFault)XIC(ResetSignal)[OTU(ErrorNum[97]) ,EQU(StopFor1,97) MOV(0,StopFor1) ];
				RC: "Fault 98$N"
				    " Non Load Side Tucker 2 Servo Initialize Fault";
				N: XIC(NonLoadSideTucker2_Tags.InitializeFault)OTL(ErrorNum[98])OTL(FaultPresent)EQU(StopFor1,0)MOV(98,StopFor1);
				RC: "Fault 98$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[98]) OTU(NonLoadSideTucker2_Tags.InitializeFault) ,EQU(StopFor1,98) MOV(0,StopFor1) ];
				RC: "Fault 99$N"
				    " Non Load Side Tucker 2 Servo Cam Fault";
				N: XIC(NonLoadSideTucker2_Tags.CamFault)OTL(ErrorNum[99])OTL(FaultPresent)EQU(StopFor1,0)MOV(99,StopFor1);
				RC: "Fault 99$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[99]) OTU(NonLoadSideTucker2_Tags.CamFault) ,EQU(StopFor1,99) MOV(0,StopFor1) ];
				RC: "Fault 100$N"
				    " Non Load Side Tucker 2 Servo Homing Fault";
				N: XIC(NonLoadSideTucker2_Tags.Homing_Fault)OTL(ErrorNum[100])OTL(FaultPresent)EQU(StopFor1,0)MOV(100,StopFor1);
				RC: "Fault 100$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(NonLoadSideTucker2_Tags.Homing_Fault) OTU(ErrorNum[100]) ,EQU(StopFor1,100) MOV(0,StopFor1) ];
				RC: "Fault 102$N"
				    "Phasing Belt 1 Servo Initialize Fault";
				N: XIC(INT_01_Station_Present)XIC(MTR_INT_Phasing_Belt_Tags.InitializeFault)OTL(ErrorNum[102])OTL(FaultPresent)EQU(StopFor1,0)MOV(102,StopFor1);
				RC: "Fault 102$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[102]) OTU(MTR_INT_Phasing_Belt_Tags.InitializeFault) ,EQU(StopFor1,102) MOV(0,StopFor1) ];
				RC: "Fault 103$N"
				    "Phasing Belt 1 Servo Cam Fault";
				N: XIC(INT_01_Station_Present)XIC(MTR_INT_Phasing_Belt_Tags.CamFault)OTL(ErrorNum[103])OTL(FaultPresent)EQU(StopFor1,0)MOV(103,StopFor1);
				RC: "Fault 103$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[103]) OTU(MTR_INT_Phasing_Belt_Tags.CamFault) ,EQU(StopFor1,103) MOV(0,StopFor1) ];
				RC: "Fault 104$N"
				    "Phasing Belt 1 Servo Homing Fault";
				N: XIC(INT_01_Station_Present)XIC(MTR_INT_Phasing_Belt_Tags.Homing_Fault)OTL(ErrorNum[104])OTL(FaultPresent)EQU(StopFor1,0)MOV(104,StopFor1);
				RC: "Fault 104$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(MTR_INT_Phasing_Belt_Tags.Homing_Fault) OTU(ErrorNum[104]) ,EQU(StopFor1,104) MOV(0,StopFor1) ];
				RC: "Fault 105$N"
				    "Phasing Belt 1 Servo Over Torque Fault";
				N: XIC(INT_01_Station_Present)XIC(MTR_INT_Phasing_Belt_Tags.OverTorque_fault)OTL(ErrorNum[105])OTL(FaultPresent)EQU(StopFor1,0)MOV(105,StopFor1);
				RC: "Fault 105$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[105]) OTU(MTR_INT_Phasing_Belt_Tags.OverTorque_fault) ,EQU(StopFor1,105) MOV(0,StopFor1) ];
				RC: "Fault 107$N"
				    "Right Rotor Servo Initialize Fault";
				N: XIC(INT_01_Station_Present)XIC(MTR_INT_Right_Rotor_Tags.InitializeFault)OTL(ErrorNum[107])OTL(FaultPresent)EQU(StopFor1,0)MOV(107,StopFor1);
				RC: "Fault 107$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[107]) OTU(MTR_INT_Right_Rotor_Tags.InitializeFault) ,EQU(StopFor1,107) MOV(0,StopFor1) ];
				RC: "Fault 108$N"
				    "Right Rotor Servo Cam Fault";
				N: XIC(INT_01_Station_Present)XIC(MTR_INT_Right_Rotor_Tags.CamFault)OTL(ErrorNum[108])OTL(FaultPresent)EQU(StopFor1,0)MOV(108,StopFor1);
				RC: "Fault 108$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[108]) OTU(MTR_INT_Right_Rotor_Tags.CamFault) ,EQU(StopFor1,108) MOV(0,StopFor1) ];
				RC: "Fault 109$N"
				    "Right Rotor Servo Homing Fault";
				N: XIC(INT_01_Station_Present)XIC(MTR_INT_Right_Rotor_Tags.Homing_Fault)OTL(ErrorNum[109])OTL(FaultPresent)EQU(StopFor1,0)MOV(109,StopFor1);
				RC: "Fault 109$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(MTR_INT_Right_Rotor_Tags.Homing_Fault) OTU(ErrorNum[109]) ,EQU(StopFor1,109) MOV(0,StopFor1) ];
				RC: "Fault 110$N"
				    "Right Rotor Servo Over Torque Fault";
				N: XIC(INT_01_Station_Present)XIC(MTR_INT_Right_Rotor_Tags.OverTorque_fault)OTL(ErrorNum[110])OTL(FaultPresent)EQU(StopFor1,0)MOV(110,StopFor1);
				RC: "Fault 110$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[110]) OTU(MTR_INT_Right_Rotor_Tags.OverTorque_fault) ,EQU(StopFor1,110) MOV(0,StopFor1) ];
				RC: "Fault 112$N"
				    "Left Rotor Servo Initialize Fault";
				N: XIC(INT_01_Station_Present)XIC(MTR_INT_Left_Rotor_Tags.InitializeFault)OTL(ErrorNum[112])OTL(FaultPresent)EQU(StopFor1,0)MOV(112,StopFor1);
				RC: "Fault 112$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[112]) OTU(MTR_INT_Left_Rotor_Tags.InitializeFault) ,EQU(StopFor1,112) MOV(0,StopFor1) ];
				RC: "Fault 113$N"
				    "Left Rotor Servo Cam Fault";
				N: XIC(INT_01_Station_Present)XIC(MTR_INT_Left_Rotor_Tags.CamFault)OTL(ErrorNum[113])OTL(FaultPresent)EQU(StopFor1,0)MOV(113,StopFor1);
				RC: "Fault 113$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[113]) OTU(MTR_INT_Left_Rotor_Tags.CamFault) ,EQU(StopFor1,113) MOV(0,StopFor1) ];
				RC: "Fault 114$N"
				    "Left Rotor Servo Homing Fault";
				N: XIC(INT_01_Station_Present)XIC(MTR_INT_Left_Rotor_Tags.Homing_Fault)OTL(ErrorNum[114])OTL(FaultPresent)EQU(StopFor1,0)MOV(114,StopFor1);
				RC: "Fault 114$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(MTR_INT_Left_Rotor_Tags.Homing_Fault) OTU(ErrorNum[114]) ,EQU(StopFor1,114) MOV(0,StopFor1) ];
				RC: "Fault 115$N"
				    "Left Rotor Servo Over Torque Fault";
				N: XIC(INT_01_Station_Present)XIC(MTR_INT_Left_Rotor_Tags.OverTorque_fault)OTL(ErrorNum[115])OTL(FaultPresent)EQU(StopFor1,0)MOV(115,StopFor1);
				RC: "Fault 115$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(ErrorNum[115]) OTU(MTR_INT_Left_Rotor_Tags.OverTorque_fault) ,EQU(StopFor1,115) MOV(0,StopFor1) ];
				RC: "Fault 116$N"
				    "Infeed/ Metering Belts VFD Fault";
				N: XIC(INT_01_Station_Present)XIC(INT_Infeed_Belt_Tags.InitializeFault)OTL(ErrorNum[116])OTL(FaultPresent)EQU(StopFor1,0)MOV(116,StopFor1);
				RC: "Fault 116$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(INT_Infeed_Belt_Tags.InitializeFault) OTU(ErrorNum[116]) ,EQU(StopFor1,116) MOV(0,StopFor1) ];
				RC: "Fault 117$N"
				    "Accel Belts VFD Fault";
				N: XIC(INT_01_Station_Present)XIC(INT_Accel_Belt_Tags.InitializeFault)OTL(ErrorNum[117])OTL(FaultPresent)EQU(StopFor1,0)MOV(117,StopFor1);
				RC: "Fault 117$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(INT_Accel_Belt_Tags.InitializeFault) OTU(ErrorNum[117]) ,EQU(StopFor1,117) MOV(0,StopFor1) ];
				RC: "Fault 118$N"
				    "Launch Belts VFD Fault";
				N: XIC(INT_01_Station_Present)XIC(INT_Launch_Belt_Tags.InitializeFault)OTL(ErrorNum[118])OTL(FaultPresent)EQU(StopFor1,0)MOV(118,StopFor1);
				RC: "Fault 118$N"
				    "Reset";
				N: XIC(ResetSignal)[OTU(INT_Launch_Belt_Tags.InitializeFault) OTU(ErrorNum[118]) ,EQU(StopFor1,118) MOV(0,StopFor1) ];
				N: [ADD(error_index,1,error_index) ,GEQ(error_index,191) MOV(0,error_index) ];
				RC: "Sercos Boot Up TImer";
				N: [XIC(S:FS) ,XIC(Sercos_bootup_timer.TT) ,XIC(Sercos_bootup_timer.DN) ]TON(Sercos_bootup_timer,?,?);
				RC: "This timer determines if all the faults are clear";
				N: XIO(ErrorNum[error_index])TON(FaultsClearedTimer,?,?);
				RC: "This timer ignores Fault 29 (MCR fault) and indicates if all other faults are clear.";
				N: [XIO(ErrorNum[error_index]) ,EQU(error_index,29) ]TON(NonMCR_Faults_Cleared_Timer,?,?);
				RC: "If all faults are clear the PLC safety interlock output turns on.";
				N: [XIO(PML_State.Sts_Aborting) XIO(FaultPresent) ,XIC(ForceOutputOn5.0) ]XIO(ForceOutputOff5.0)OTE(PLCSafetyInterlock);
				RC: "If any faults other than Fault 29 (MCR Fault) then Fault currently present is set.";
				N: NEQ(error_index,29)XIC(ErrorNum[error_index])OTL(FaultCurrentlyPresent);
				RC: "If all faults are cleared then the FaultPresent tag is turned off.";
				N: XIC(FaultsClearedTimer.DN)XIC(ResetSignal)XIC(Sercos_bootup_timer.DN)OTU(FaultPresent);
				RC: "If all faults other than fault 29 (MCR Fault) are clear then the Fault Currently Present tag is turned off.";
				N: XIC(NonMCR_Faults_Cleared_Timer.DN)XIO(ErrorNum[29])XIC(Sercos_bootup_timer.DN)OTU(FaultCurrentlyPresent);
				RC: "This rung controls the internal and external reset signals.";
				N: XIC(ResetActive)[XIO(MCRIinput) OTE(ResetSignal) ,XIC(PLCSafetyInterlock) XIO(MCRIinput) TON(SafetyResetDelayTimer,?,?) XIC(SafetyResetDelayTimer.DN) OTE(SafetyResetOutput) ,[XIC(MCRIinput) TON(ServoResetDelayTimer,?,?) XIC(ServoResetDelayTimer.DN) ,XIC(FaultPresent) ] OTE(ClearServoFaults) ];
				N: XIO(PML_State.Sts_Aborted)XIC(MCRIinput)TON(NotAbortedWDelayTimer,?,?);
		END_ROUTINE

		ROUTINE R06_FaultStatus 
				N: XIC(ErrorNum[0])[CTU(Fault_Counter[0],?,?) ,RTO(Fault_Timer[0],?,?) ,XIC(Fault_Timer[0].DN) CTU(Fault_Min[0],?,?) RES(Fault_Timer[0]) ,XIC(Fault_Min[0].DN) CTU(Fault_Hr[0],?,?) RES(Fault_Min[0]) ,XIC(Fault_Hr[0].DN) CTU(Fault_Yr[0],?,?) RES(Fault_Hr[0]) ];
				N: XIC(ErrorNum[1])[CTU(Fault_Counter[1],?,?) ,RTO(Fault_Timer[1],?,?) ,XIC(Fault_Timer[1].DN) CTU(Fault_Min[1],?,?) RES(Fault_Timer[1]) ,XIC(Fault_Min[1].DN) CTU(Fault_Hr[1],?,?) RES(Fault_Min[1]) ,XIC(Fault_Hr[1].DN) CTU(Fault_Yr[1],?,?) RES(Fault_Hr[1]) ];
				N: XIC(ErrorNum[2])[CTU(Fault_Counter[2],?,?) ,RTO(Fault_Timer[2],?,?) ,XIC(Fault_Timer[2].DN) CTU(Fault_Min[2],?,?) RES(Fault_Timer[2]) ,XIC(Fault_Min[2].DN) CTU(Fault_Hr[2],?,?) RES(Fault_Min[2]) ,XIC(Fault_Hr[2].DN) CTU(Fault_Yr[2],?,?) RES(Fault_Hr[2]) ];
				N: XIC(ErrorNum[3])[CTU(Fault_Counter[3],?,?) ,RTO(Fault_Timer[3],?,?) ,XIC(Fault_Timer[3].DN) CTU(Fault_Min[3],?,?) RES(Fault_Timer[3]) ,XIC(Fault_Min[3].DN) CTU(Fault_Hr[3],?,?) RES(Fault_Min[3]) ,XIC(Fault_Hr[3].DN) CTU(Fault_Yr[3],?,?) RES(Fault_Hr[3]) ];
				N: XIC(ErrorNum[4])[CTU(Fault_Counter[4],?,?) ,RTO(Fault_Timer[4],?,?) ,XIC(Fault_Timer[4].DN) CTU(Fault_Min[4],?,?) RES(Fault_Timer[4]) ,XIC(Fault_Min[4].DN) CTU(Fault_Hr[4],?,?) RES(Fault_Min[4]) ,XIC(Fault_Hr[4].DN) CTU(Fault_Yr[4],?,?) RES(Fault_Hr[4]) ];
				N: XIC(ErrorNum[5])[CTU(Fault_Counter[5],?,?) ,RTO(Fault_Timer[5],?,?) ,XIC(Fault_Timer[5].DN) CTU(Fault_Min[5],?,?) RES(Fault_Timer[5]) ,XIC(Fault_Min[5].DN) CTU(Fault_Hr[5],?,?) RES(Fault_Min[5]) ,XIC(Fault_Hr[5].DN) CTU(Fault_Yr[5],?,?) RES(Fault_Hr[5]) ];
				N: XIC(ErrorNum[6])[CTU(Fault_Counter[6],?,?) ,RTO(Fault_Timer[6],?,?) ,XIC(Fault_Timer[6].DN) CTU(Fault_Min[6],?,?) RES(Fault_Timer[6]) ,XIC(Fault_Min[6].DN) CTU(Fault_Hr[6],?,?) RES(Fault_Min[6]) ,XIC(Fault_Hr[6].DN) CTU(Fault_Yr[6],?,?) RES(Fault_Hr[6]) ];
				N: XIC(ErrorNum[7])[CTU(Fault_Counter[7],?,?) ,RTO(Fault_Timer[7],?,?) ,XIC(Fault_Timer[7].DN) CTU(Fault_Min[7],?,?) RES(Fault_Timer[7]) ,XIC(Fault_Min[7].DN) CTU(Fault_Hr[7],?,?) RES(Fault_Min[7]) ,XIC(Fault_Hr[7].DN) CTU(Fault_Yr[7],?,?) RES(Fault_Hr[7]) ];
				N: XIC(ErrorNum[8])[CTU(Fault_Counter[8],?,?) ,RTO(Fault_Timer[8],?,?) ,XIC(Fault_Timer[8].DN) CTU(Fault_Min[8],?,?) RES(Fault_Timer[8]) ,XIC(Fault_Min[8].DN) CTU(Fault_Hr[8],?,?) RES(Fault_Min[8]) ,XIC(Fault_Hr[8].DN) CTU(Fault_Yr[8],?,?) RES(Fault_Hr[8]) ];
				N: XIC(ErrorNum[9])[CTU(Fault_Counter[9],?,?) ,RTO(Fault_Timer[9],?,?) ,XIC(Fault_Timer[9].DN) CTU(Fault_Min[9],?,?) RES(Fault_Timer[9]) ,XIC(Fault_Min[9].DN) CTU(Fault_Hr[9],?,?) RES(Fault_Min[9]) ,XIC(Fault_Hr[9].DN) CTU(Fault_Yr[9],?,?) RES(Fault_Hr[9]) ];
				N: XIC(ErrorNum[10])[CTU(Fault_Counter[10],?,?) ,RTO(Fault_Timer[10],?,?) ,XIC(Fault_Timer[10].DN) CTU(Fault_Min[10],?,?) RES(Fault_Timer[10]) ,XIC(Fault_Min[10].DN) CTU(Fault_Hr[10],?,?) RES(Fault_Min[10]) ,XIC(Fault_Hr[10].DN) CTU(Fault_Yr[10],?,?) RES(Fault_Hr[10]) ];
				N: XIC(ErrorNum[11])[CTU(Fault_Counter[11],?,?) ,RTO(Fault_Timer[11],?,?) ,XIC(Fault_Timer[11].DN) CTU(Fault_Min[11],?,?) RES(Fault_Timer[11]) ,XIC(Fault_Min[11].DN) CTU(Fault_Hr[11],?,?) RES(Fault_Min[11]) ,XIC(Fault_Hr[11].DN) CTU(Fault_Yr[11],?,?) RES(Fault_Hr[11]) ];
				N: XIC(ErrorNum[12])[CTU(Fault_Counter[12],?,?) ,RTO(Fault_Timer[12],?,?) ,XIC(Fault_Timer[12].DN) CTU(Fault_Min[12],?,?) RES(Fault_Timer[12]) ,XIC(Fault_Min[12].DN) CTU(Fault_Hr[12],?,?) RES(Fault_Min[12]) ,XIC(Fault_Hr[12].DN) CTU(Fault_Yr[12],?,?) RES(Fault_Hr[12]) ];
				N: XIC(ErrorNum[13])[CTU(Fault_Counter[13],?,?) ,RTO(Fault_Timer[13],?,?) ,XIC(Fault_Timer[13].DN) CTU(Fault_Min[13],?,?) RES(Fault_Timer[13]) ,XIC(Fault_Min[13].DN) CTU(Fault_Hr[13],?,?) RES(Fault_Min[13]) ,XIC(Fault_Hr[13].DN) CTU(Fault_Yr[13],?,?) RES(Fault_Hr[13]) ];
				N: XIC(ErrorNum[14])[CTU(Fault_Counter[14],?,?) ,RTO(Fault_Timer[14],?,?) ,XIC(Fault_Timer[14].DN) CTU(Fault_Min[14],?,?) RES(Fault_Timer[14]) ,XIC(Fault_Min[14].DN) CTU(Fault_Hr[14],?,?) RES(Fault_Min[14]) ,XIC(Fault_Hr[14].DN) CTU(Fault_Yr[14],?,?) RES(Fault_Hr[14]) ];
				N: XIC(ErrorNum[15])[CTU(Fault_Counter[15],?,?) ,RTO(Fault_Timer[15],?,?) ,XIC(Fault_Timer[15].DN) CTU(Fault_Min[15],?,?) RES(Fault_Timer[15]) ,XIC(Fault_Min[15].DN) CTU(Fault_Hr[15],?,?) RES(Fault_Min[15]) ,XIC(Fault_Hr[15].DN) CTU(Fault_Yr[15],?,?) RES(Fault_Hr[15]) ];
				N: XIC(ErrorNum[16])[CTU(Fault_Counter[16],?,?) ,RTO(Fault_Timer[16],?,?) ,XIC(Fault_Timer[16].DN) CTU(Fault_Min[16],?,?) RES(Fault_Timer[16]) ,XIC(Fault_Min[16].DN) CTU(Fault_Hr[16],?,?) RES(Fault_Min[16]) ,XIC(Fault_Hr[16].DN) CTU(Fault_Yr[16],?,?) RES(Fault_Hr[16]) ];
				N: XIC(ErrorNum[17])[CTU(Fault_Counter[17],?,?) ,RTO(Fault_Timer[17],?,?) ,XIC(Fault_Timer[17].DN) CTU(Fault_Min[17],?,?) RES(Fault_Timer[17]) ,XIC(Fault_Min[17].DN) CTU(Fault_Hr[17],?,?) RES(Fault_Min[17]) ,XIC(Fault_Hr[17].DN) CTU(Fault_Yr[17],?,?) RES(Fault_Hr[17]) ];
				N: XIC(ErrorNum[18])[CTU(Fault_Counter[18],?,?) ,RTO(Fault_Timer[18],?,?) ,XIC(Fault_Timer[18].DN) CTU(Fault_Min[18],?,?) RES(Fault_Timer[18]) ,XIC(Fault_Min[18].DN) CTU(Fault_Hr[18],?,?) RES(Fault_Min[18]) ,XIC(Fault_Hr[18].DN) CTU(Fault_Yr[18],?,?) RES(Fault_Hr[18]) ];
				N: XIC(ErrorNum[19])[CTU(Fault_Counter[19],?,?) ,RTO(Fault_Timer[19],?,?) ,XIC(Fault_Timer[19].DN) CTU(Fault_Min[19],?,?) RES(Fault_Timer[19]) ,XIC(Fault_Min[19].DN) CTU(Fault_Hr[19],?,?) RES(Fault_Min[19]) ,XIC(Fault_Hr[19].DN) CTU(Fault_Yr[19],?,?) RES(Fault_Hr[19]) ];
				N: XIC(ErrorNum[20])[CTU(Fault_Counter[20],?,?) ,RTO(Fault_Timer[20],?,?) ,XIC(Fault_Timer[20].DN) CTU(Fault_Min[20],?,?) RES(Fault_Timer[20]) ,XIC(Fault_Min[20].DN) CTU(Fault_Hr[20],?,?) RES(Fault_Min[20]) ,XIC(Fault_Hr[20].DN) CTU(Fault_Yr[20],?,?) RES(Fault_Hr[20]) ];
				N: XIC(ErrorNum[21])[CTU(Fault_Counter[21],?,?) ,RTO(Fault_Timer[21],?,?) ,XIC(Fault_Timer[21].DN) CTU(Fault_Min[21],?,?) RES(Fault_Timer[21]) ,XIC(Fault_Min[21].DN) CTU(Fault_Hr[21],?,?) RES(Fault_Min[21]) ,XIC(Fault_Hr[21].DN) CTU(Fault_Yr[21],?,?) RES(Fault_Hr[21]) ];
				N: XIC(ErrorNum[22])[CTU(Fault_Counter[22],?,?) ,RTO(Fault_Timer[22],?,?) ,XIC(Fault_Timer[22].DN) CTU(Fault_Min[22],?,?) RES(Fault_Timer[22]) ,XIC(Fault_Min[22].DN) CTU(Fault_Hr[22],?,?) RES(Fault_Min[22]) ,XIC(Fault_Hr[22].DN) CTU(Fault_Yr[22],?,?) RES(Fault_Hr[22]) ];
				N: XIC(ErrorNum[30])[CTU(Fault_Counter[30],?,?) ,RTO(Fault_Timer[30],?,?) ,XIC(Fault_Timer[30].DN) CTU(Fault_Min[30],?,?) RES(Fault_Timer[30]) ,XIC(Fault_Min[30].DN) CTU(Fault_Hr[30],?,?) RES(Fault_Min[30]) ,XIC(Fault_Hr[30].DN) CTU(Fault_Yr[30],?,?) RES(Fault_Hr[30]) ];
				N: XIC(ErrorNum[31])[CTU(Fault_Counter[31],?,?) ,RTO(Fault_Timer[31],?,?) ,XIC(Fault_Timer[31].DN) CTU(Fault_Min[31],?,?) RES(Fault_Timer[31]) ,XIC(Fault_Min[31].DN) CTU(Fault_Hr[31],?,?) RES(Fault_Min[31]) ,XIC(Fault_Hr[31].DN) CTU(Fault_Yr[31],?,?) RES(Fault_Hr[31]) ];
				N: XIC(ErrorNum[32])[CTU(Fault_Counter[32],?,?) ,RTO(Fault_Timer[32],?,?) ,XIC(Fault_Timer[32].DN) CTU(Fault_Min[32],?,?) RES(Fault_Timer[32]) ,XIC(Fault_Min[32].DN) CTU(Fault_Hr[32],?,?) RES(Fault_Min[32]) ,XIC(Fault_Hr[32].DN) CTU(Fault_Yr[32],?,?) RES(Fault_Hr[32]) ];
				N: XIC(ErrorNum[33])[CTU(Fault_Counter[33],?,?) ,RTO(Fault_Timer[33],?,?) ,XIC(Fault_Timer[33].DN) CTU(Fault_Min[33],?,?) RES(Fault_Timer[33]) ,XIC(Fault_Min[33].DN) CTU(Fault_Hr[33],?,?) RES(Fault_Min[33]) ,XIC(Fault_Hr[33].DN) CTU(Fault_Yr[33],?,?) RES(Fault_Hr[33]) ];
				N: XIC(ErrorNum[34])[CTU(Fault_Counter[34],?,?) ,RTO(Fault_Timer[34],?,?) ,XIC(Fault_Timer[34].DN) CTU(Fault_Min[34],?,?) RES(Fault_Timer[34]) ,XIC(Fault_Min[34].DN) CTU(Fault_Hr[34],?,?) RES(Fault_Min[34]) ,XIC(Fault_Hr[34].DN) CTU(Fault_Yr[34],?,?) RES(Fault_Hr[34]) ];
				N: XIC(ErrorNum[35])[CTU(Fault_Counter[35],?,?) ,RTO(Fault_Timer[35],?,?) ,XIC(Fault_Timer[35].DN) CTU(Fault_Min[35],?,?) RES(Fault_Timer[35]) ,XIC(Fault_Min[35].DN) CTU(Fault_Hr[35],?,?) RES(Fault_Min[35]) ,XIC(Fault_Hr[35].DN) CTU(Fault_Yr[35],?,?) RES(Fault_Hr[35]) ];
				N: XIC(ErrorNum[36])[CTU(Fault_Counter[36],?,?) ,RTO(Fault_Timer[36],?,?) ,XIC(Fault_Timer[36].DN) CTU(Fault_Min[36],?,?) RES(Fault_Timer[36]) ,XIC(Fault_Min[36].DN) CTU(Fault_Hr[36],?,?) RES(Fault_Min[36]) ,XIC(Fault_Hr[36].DN) CTU(Fault_Yr[36],?,?) RES(Fault_Hr[36]) ];
				N: XIC(ErrorNum[37])[CTU(Fault_Counter[37],?,?) ,RTO(Fault_Timer[37],?,?) ,XIC(Fault_Timer[37].DN) CTU(Fault_Min[37],?,?) RES(Fault_Timer[37]) ,XIC(Fault_Min[37].DN) CTU(Fault_Hr[37],?,?) RES(Fault_Min[37]) ,XIC(Fault_Hr[37].DN) CTU(Fault_Yr[37],?,?) RES(Fault_Hr[37]) ];
				N: XIC(ErrorNum[38])[CTU(Fault_Counter[38],?,?) ,RTO(Fault_Timer[38],?,?) ,XIC(Fault_Timer[38].DN) CTU(Fault_Min[38],?,?) RES(Fault_Timer[38]) ,XIC(Fault_Min[38].DN) CTU(Fault_Hr[38],?,?) RES(Fault_Min[38]) ,XIC(Fault_Hr[38].DN) CTU(Fault_Yr[38],?,?) RES(Fault_Hr[38]) ];
				N: XIC(ErrorNum[39])[CTU(Fault_Counter[39],?,?) ,RTO(Fault_Timer[39],?,?) ,XIC(Fault_Timer[39].DN) CTU(Fault_Min[39],?,?) RES(Fault_Timer[39]) ,XIC(Fault_Min[39].DN) CTU(Fault_Hr[39],?,?) RES(Fault_Min[39]) ,XIC(Fault_Hr[39].DN) CTU(Fault_Yr[39],?,?) RES(Fault_Hr[39]) ];
				N: XIC(ErrorNum[40])[CTU(Fault_Counter[40],?,?) ,RTO(Fault_Timer[40],?,?) ,XIC(Fault_Timer[40].DN) CTU(Fault_Min[40],?,?) RES(Fault_Timer[40]) ,XIC(Fault_Min[40].DN) CTU(Fault_Hr[40],?,?) RES(Fault_Min[40]) ,XIC(Fault_Hr[40].DN) CTU(Fault_Yr[40],?,?) RES(Fault_Hr[40]) ];
				N: XIC(ErrorNum[41])[CTU(Fault_Counter[41],?,?) ,RTO(Fault_Timer[41],?,?) ,XIC(Fault_Timer[41].DN) CTU(Fault_Min[41],?,?) RES(Fault_Timer[41]) ,XIC(Fault_Min[41].DN) CTU(Fault_Hr[41],?,?) RES(Fault_Min[41]) ,XIC(Fault_Hr[41].DN) CTU(Fault_Yr[41],?,?) RES(Fault_Hr[41]) ];
				N: XIC(ErrorNum[42])[CTU(Fault_Counter[42],?,?) ,RTO(Fault_Timer[42],?,?) ,XIC(Fault_Timer[42].DN) CTU(Fault_Min[42],?,?) RES(Fault_Timer[42]) ,XIC(Fault_Min[42].DN) CTU(Fault_Hr[42],?,?) RES(Fault_Min[42]) ,XIC(Fault_Hr[42].DN) CTU(Fault_Yr[42],?,?) RES(Fault_Hr[42]) ];
		END_ROUTINE

		ROUTINE R09_Outputs 
				RC: "This rung controls the ShortBlink tag.  It$'s 1 second on/off cycle is used to flash light beacons and similar indicators.";
				N: [XIO(ShortBlinkTimer.DN) TON(ShortBlinkTimer,?,?) ,GRT(ShortBlinkTimer.ACC,500) OTE(ShortBlink) ];
				RC: "This rung controls the LongBlink tag.  It$'s 1.5 second on/off cycle is used to flash light beacons and similar indicators";
				N: [XIO(LongBlinkTimer.DN) TON(LongBlinkTimer,?,?) ,GRT(LongBlinkTimer.ACC,1000) OTE(LongBlink) ];
				RC: "This rung controls the FlashBlink tag.  It$'s 0.2 second on/off cycle is used to flash light beacons and similar indicators";
				N: [XIO(FlashBlinkTimer.DN) TON(FlashBlinkTimer,?,?) ,GRT(FlashBlinkTimer.ACC,100) OTE(FlashBlink) ];
				N: [XIC(PML_State.Sts_Aborted) ,XIC(ManualModeActive) XIC(LongBlink) ,XIC(ForceOutputOn8.6) ]XIO(ForceOutputOff8.6)OTE(RedBeaconLight);
				N: [XIO(LowHopperSensor) XIC(LongBlink) ,XIC(ForceOutputOn8.7) ]XIO(ForceOutputOff8.7)OTE(YellowBeaconLight);
				N: [[XIC(PML_State.Sts_Starting) ,XIC(MachineRunning) ] ,[XIC(PML_State.Sts_Stopped) ,XIC(PML_State.Sts_Idle) ] XIO(ManualModeActive) XIC(LongBlink) ,XIC(ForceOutputOn9.0) ,XIC(ForceOutputOn8.4) ][XIO(ForceOutputOff9.0) OTE(GreenBeaconLight) ,XIO(ForceOutputOff8.4) OTE(StartButtonLight) ];
				N: [XIO(NoGlueSignal) ,XIC(LowGlueSignal) XIC(LongBlink) ,XIO(GlueReadySignal) ,XIO(LowHopperSensor) XIC(AlwaysOff) ,XIC(ForceOutputOn9.1) ]XIO(ForceOutputOff9.1)OTE(BlueBeaconLight);
				N: [XIC(StartDelayTimer.TT) ,[XIC(LowGlueAudibleAlarm) ,XIC(LowHopperAudibleAlarm) ] XIO(SilenceAlarm) XIC(LongBlink) ,XIC(ForceOutputOn8.5) ]XIO(ForceOutputOff8.5)OTE(BeaconAlarm);
				N: XIC(LowGlueAudibleAlarmEnable)XIC(PML_State.Sts_Execute)XIC(LowGlueSignal)OTL(LowGlueAudibleAlarm);
				N: [XIO(PML_State.Sts_Execute) ,XIO(LowGlueSignal) ,XIO(LowGlueAudibleAlarmEnable) ]OTU(LowGlueAudibleAlarm);
				N: XIC(LowHopperAudibleAlarmEnable)XIC(PML_State.Sts_Execute)XIO(LowHopperSensor)OTL(LowHopperAudibleAlarm);
				N: [XIO(PML_State.Sts_Execute) ,XIC(LowHopperSensor) ,XIO(LowHopperAudibleAlarmEnable) ]OTU(LowHopperAudibleAlarm);
				N: XIC(SilenceAlarm)TON(SilenceAlarmTimer,?,?)XIC(SilenceAlarmTimer.DN)OTU(SilenceAlarm);
				N: MUL(SilenceAlarmTimeMin,60000,SilenceAlarmTimer.PRE);
				N: [XIC(StartDelayTimer.TT) ,XIC(UnPauseDelayTimer.TT) ][XIO(StartDelayBlinkTImer.DN) TON(StartDelayBlinkTImer,?,?) ,GRT(StartDelayBlinkTImer.ACC,500) OTE(DelayedStartBlink) ];
				N: [XIC(PML_State.Sts_Execute) XIO(ForceOutputOff8.2) ,XIC(ForceOutputOn8.2) ]OTE(CustomerSIgnal2);
				N: [XIC(PML_State.Sts_Aborted) XIO(ForceOutputOff8.3) ,XIC(ForceOutputOn8.3) ]OTE(CustomerSIgnal1);
				RC: "This section controls the variable pressure regulator";
				N: CPT(GluePressureDecimal,MTR_PusherChain.ActualVelocity/4)TOD(GluePressureDecimal,GluePressureBCD);
				N: [[XIC(GluePressureBCD.0) XIO(ForceOutputOff8.4) ,XIC(ForceOutputOn8.4) ] OTE(GluePressureOutput_Bit_0) ,[XIC(GluePressureBCD.1) ,XIC(ForceOutputOn8.5) ] XIO(ForceOutputOff8.5) OTE(GluePressureOutput_Bit_1) ,[XIC(GluePressureBCD.2) XIO(ForceOutputOff8.6) ,XIC(ForceOutputOn8.6) ] OTE(GluePressureOutput_Bit_2) ,[XIC(GluePressureBCD.3) ,XIC(ForceOutputOn8.7) ] XIO(ForceOutputOff8.7) OTE(GluePressureOutput_Bit_3) ];
				N: [XIC(OverheadConfinerPresent) XIC(All_Axes_Synced) ,XIC(ForceOutputOff9.6) ]XIO(ForceOutputOn9.6)OTE(OverheadConfinerDownSolenoid);
				N: XIO(PML_State.Sts_Aborted)ONS(NotAbortedOneShot)OTL(CalculatePositions);
				N: TOD(CurrentRecipeNum,PrinterRecipeSelectNum);
				N: [XIC(PML_State.Sts_Aborted) XIO(PML_State.Sts_Aborted) ,XIC(ForceOutputOn9.2) ]XIO(ForceOutputOff9.2)OTE(InserterJamRelief);
				N: XIC(MachineRunning)XIC(CurrentRecipe.VibratorEnabled)OTE(VibratorSolenoid);
		END_ROUTINE

		ROUTINE R10_Recipe 
				N: [XIC(HMI_SaveRecipe) ,XIC(SaveDelayTImer.TT) ][COP(TempRecipeName,CurrentRecipe.RecipeName,1) ,COP(CurrentRecipe,Recipe[RecipeListSelection],1) ,TON(SaveDelayTImer,?,?) XIC(SaveDelayTImer.DN) OTU(HMI_SaveRecipe) ];
				N: [XIC(HMI_LoadRecipe) ,XIC(LoadGlueParametersTimer.TT) ][OTL(LoadingRecipe) [TON(LoadDelayTimer,?,?) XIO(LoadDelayTimer.DN) COP(CurrentRecipe,PrevRecipe,1) ,XIC(LoadDelayTimer.DN) COP(Recipe[RecipeListSelection],CurrentRecipe,1) ,XIC(LoadDelayTimer.DN) MOV(RecipeListSelection,CurrentRecipeNum) ,XIC(LoadDelayTimer.DN) MUL(CurrentRecipe.LoadSideTuckerOffset,30,LoadSideTuckerOffsetHMI) MUL(CurrentRecipe.NonLoadSideTuckerOffset,30,NonLoadSideTuckerOffsetHMI) MUL(CurrentRecipe.NonLoadSideTucker2Offset,30,NonLoadSideTucker2OffsetHMI) ] ,TON(LoadGlueParametersTimer,?,?) XIC(LoadGlueParametersTimer.DN) OTL(UpdateLoadSidePattern) OTL(UpdateNonLoadSidePattern) OTL(CheckListEnabled) OTL(NeedToRetractInserter) OTU(HMI_LoadRecipe) OTU(LoadingRecipe) MOV(0,CheckListState) ];
				N: XIC(jrltest3)COP(Recipe[1],CurrentRecipe,1);
				N: COP(Recipe[RecipeListSelection].RecipeName,CurrentlySelectedRecipe,1);
				N: XIC(HMI_DeleteRecipe)OTU(HMI_DeleteRecipe)COP(EmptyString,Recipe[RecipeListSelection].RecipeName,1);
				N: [XIC(CurrentRecipe.DisplayUnitsInch) COP(InchText,UnitsText,1) ,XIO(CurrentRecipe.DisplayUnitsInch) COP(mmText,UnitsText,1) ];
				N: XIC(NeedToRetractInserter)[XIC(PML_State.Sts_Stopped) ,XIC(PML_State.Sts_Idle) ]OTE(RetractInserterButtonVisable);
		END_ROUTINE

		CHILD_PROGRAMS
		END_CHILD_PROGRAMS