This provides the .l5k program export overview of VirtualMaster routine within the PLC from the SIPTU HS5160 machine from Kliklok-Woodman, a conveyor. Use this program to understand the logic so that it can be queried in the future. What will often be asked is information about why a program may not be working, so this document provides the information necessary to answer this.
(MAIN := "R00_Main",
	                       MODE := 0,
	                       DisableFlag := 0,
	                       UseAsFolder := 0)
		TAG
			AxisDecel : REAL (RADIX := Float) := 8.33333313e-001;
			Axis_Accel : REAL (RADIX := Float) := 6.66666687e-001;
			Axis_Dist : DINT (RADIX := Decimal) := 0;
			Axis_Enable : MOTION_INSTRUCTION  := [0,0,0,0,0,0,0,0,0];
			Axis_Finish_Cycle : MOTION_INSTRUCTION  := [0,0,0,0,0,0,0,0,0];
			Axis_Jog : MOTION_INSTRUCTION  := [33554432,0,0,0,0,0,0,0,0];
			Axis_Jog_Stop : MOTION_INSTRUCTION  := [33554432,0,0,0,0,0,0,0,0];
			Axis_MAFR : MOTION_INSTRUCTION  := [570425344,0,0,0,0,0,0,0,0];
			Axis_MAFR2 : MOTION_INSTRUCTION  := [570425344,0,0,0,0,0,0,0,0];
			Axis_MASD : MOTION_INSTRUCTION  := [570425344,0,0,0,0,0,0,0,0];
			Axis_MASD2 : MOTION_INSTRUCTION  := [570425344,0,0,0,0,0,0,0,0];
			Axis_MASR : MOTION_INSTRUCTION  := [570425344,0,0,0,0,0,0,0,0];
			Axis_RUN : MOTION_INSTRUCTION  := [570425344,0,0,0,0,0,0,0,0];
			Axis_Run_x : MOTION_INSTRUCTION  := [0,0,0,0,0,0,0,0,0];
			Axis_Speed : REAL (RADIX := Float) := 8.33333313e-001;
			Axis_Stop_All : MOTION_INSTRUCTION  := [704643072,0,0,0,0,0,0,0,0];
			CamMCCPCommand : MOTION_INSTRUCTION  := [570425344,0,0,0,0,0,0,0,0];
			CamProfile : CAM_PROFILE[2]  := [[3,0,0,0,0,0,0,0,1068848469,1431655765,0,0,0,0],[2,1076363264,0,1072693248,0,0,0,0,1068848469,1431655765,0,0,0
					,0]];
			CamTable : CAM[2]  := [[0.00000000e+000,0.00000000e+000,0],[1.20000000e+001,1.00000000e+000,0]];
			Cmd_Jog : BOOL (RADIX := Decimal) := 0;
			Cmd_Number_of_Cycles : DINT (RADIX := Decimal) := 0;
			CurrentJoglSpeed : REAL (RADIX := Float) := 2.00000000e+001;
			EstopDecel : REAL (RADIX := Float) := 0.00000000e+000;
			JogAccel : REAL (RADIX := Float) := 1.60000000e+001;
			JogDecel : REAL (RADIX := Float) := 4.00000000e+001;
			JogSpeed : REAL (RADIX := Float) := 0.00000000e+000;
			Jog_Start_Timer : TIMER  := [0,500,0];
			MAMStopCommand : MOTION_INSTRUCTION  := [704643072,0,0,0,0,0,0,0,0];
			MAPCCommand : MOTION_INSTRUCTION  := [637534208,0,0,0,0,0,0,0,0];
			MASCommand : MOTION_INSTRUCTION  := [704643072,0,0,0,0,0,0,0,0];
			MASCommand2 : MOTION_INSTRUCTION  := [301989888,7,0,0,0,0,0,0,0];
			MasterAxis OF ENT_Pusher_Chain ;
			Retry_MAJ : TIMER  := [4172439,1000,0];
			ROTARY_POSITIVE : DINT (RADIX := Decimal) := 3;
			ServoAxis OF VirtualMaster ;
			ServoAxis_CMD OF VirtualMaster_CMD ;
			ServoAxis_Status OF VirtualMaster_Status ;
			ServoAxis_Tags : UDT_Servo_Tags  := [0,0.00000000e+000,0,0,0,0,0,0,0,0.00000000e+000,0.00000000e+000,8,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000];
			Start_timer : TIMER  := [0,500,0];
			StateCamTimer : TIMER  := [357236,20000,0];
			State_AutoMode : DINT (RADIX := Decimal) := 0;
			State_Cam : DINT (RADIX := Decimal) := 0;
			State_EStop : DINT (RADIX := Decimal) := 0;
			State_Initialize : DINT (RADIX := Decimal) := 0;
			State_Jog : DINT (RADIX := Decimal) := 0;
			State_Run : DINT (RADIX := Decimal) := 0;
			State_Stop : DINT (RADIX := Decimal) := 0;
			StopDecel : REAL (RADIX := Float) := 5.99999962e+001;
			TestSpeed : DINT (RADIX := Decimal) := 50;
			Virtual_MCD_command : MOTION_INSTRUCTION  := [33554432,0,0,0,0,0,0,0,0];
		END_TAG

		ROUTINE R00_Main 
				N: JSR(R01_Jog,0);
				N: JSR(R02_Run,0);
				N: JSR(R03_Cam,0);
				N: JSR(R05_Stop,0);
				N: JSR(R04_AutoMode,0);
				N: JSR(R06_EStop,0);
				N: JSR(R07_Initialize,0);
		END_ROUTINE

		ROUTINE R01_Jog 
				N: XIC(ManualModeAllAxes)CPT(JogSpeed,JogSpeedHMI/60)CPT(JogAccel,JogSpeed*0.8)CPT(JogDecel,JogSpeed*2);
				N: XIC(ManualModeAllAxes)[XIC(HMI_JogBtn) ,XIC(HMI_JogContinuously) ]XIO(Axis_Jog.IP)MAJ(ServoAxis,Axis_Jog,0,JogSpeed,Units per sec,JogAccel,Units per sec2,JogDecel,Units per sec2,Trapezoidal,50,50,% of Time,Disabled,Programmed,0,None);
				N: [XIO(ManualModeAllAxes) ,XIO(HMI_JogBtn) XIO(HMI_JogContinuously) ]XIC(Axis_Jog.IP)MAS(ServoAxis,Axis_Jog_Stop,Jog,Yes,JogDecel,Units per sec2,No,50,% of Time);
				N: XIC(Axis_Jog.IP)NEQ(JogSpeed,CurrentJoglSpeed)MCD(ServoAxis,Virtual_MCD_command,Jog,Yes,JogSpeed,Yes,20,Yes,20,Yes,100.0,Yes,100.0,Units per sec,Units per sec2,Units per sec2,% of Maximum)MOV(JogSpeed,CurrentJoglSpeed);
		END_ROUTINE

		ROUTINE R02_Run 
				N: [XIC(S:FS) ,XIO(ServoAxis_CMD.Run) ]MOV(0,State_Run);
				N: EQU(State_Run,0)XIC(ServoAxis_CMD.Run)MOV(10,State_Run);
				N: EQU(State_Run,10)MOV(TestSpeed,TestSpeed)CPT(Axis_Speed,TestSpeed/60)CPT(Axis_Accel,Axis_Speed*0.8)CPT(AxisDecel,Axis_Speed*1)MOV(20,State_Run);
				N: EQU(State_Run,20)[MAJ(ServoAxis,Axis_RUN,0,Axis_Speed,Units per sec,Axis_Accel,Units per sec2,AxisDecel,Units per sec2,S-Curve,50,50,% of Maximum,Disabled,Programmed,0,None) ,XIC(Axis_RUN.IP) MOV(30,State_Run) ,XIC(Axis_RUN.ER) TON(Retry_MAJ,?,?) XIC(Retry_MAJ.DN) MOV(0,State_Run) ];
				N: EQU(State_Run,30)OTE(ServoAxis_Status.Running);
		END_ROUTINE

		ROUTINE R03_Cam 
				N: XIC(S:FS)MOV(0,CamTable[0].Master)MOV(0,CamTable[0].Slave)MOV(MachinePitch_Inches,CamTable[1].Master)MOV(1,CamTable[1].Slave)MOV(0,State_Cam);
				N: EQU(State_Cam,0)[XIC(ServoAxis_CMD.Cam) ,XIC(ServoAxis_CMD.ManualModeCam) ][XIO(ServoAxis.PositionCamStatus) MCCP(CamMCCPCommand,CamTable[0],2,1,1,CamProfile[0]) [XIC(CamMCCPCommand.DN) MOV(20,State_Cam) ,XIC(CamMCCPCommand.ER) MOV(999,State_Cam) ] ,XIC(ServoAxis.PositionCamStatus) MOV(50,State_Cam) ];
				N: EQU(State_Cam,20)[MAPC(ServoAxis,MasterAxis,MAPCCommand,0,CamProfile[0],1,1,Continuous,Immediate,0,0,New Cam,Command,Bi-Directional) ,XIC(MAPCCommand.IP) MOV(50,State_Cam) ,XIC(MAPCCommand.ER) MOV(999,State_Cam) ];
				N: EQU(State_Cam,50)[OTE(ServoAxis_Status.CamEngaged) ,XIO(ServoAxis_CMD.Cam) XIO(ServoAxis_CMD.ManualModeCam) MOV(0,State_Cam) ];
				N: GRT(State_Cam,0)XIO(ServoAxis_Status.CamEngaged)TON(StateCamTimer,?,?);
				N: [EQU(State_Cam,999) ,XIC(StateCamTimer.DN) ][OTL(ServoAxis_Tags.CamFault) ,MOV(0,State_Cam) ];
		END_ROUTINE

		ROUTINE R04_AutoMode 
		END_ROUTINE

		ROUTINE R05_Stop 
				N: [XIC(S:FS) ,XIO(ServoAxis_CMD.Stop) ]MOV(0,State_Stop);
				N: EQU(State_Stop,0)XIC(ServoAxis_CMD.Stop)MOV(10,State_Stop);
				N: EQU(State_Stop,10)[MAS(ServoAxis,MASCommand,Jog,Yes,AxisDecel,Units per sec2,Yes,100,% of Maximum) ,[XIC(MASCommand.IP) ,XIC(MASCommand.PC) ] MOV(50,State_Stop) ,XIC(MASCommand.ER) MOV(60,State_Stop) ];
				N: EQU(State_Stop,50)XIC(MASCommand.PC)MOV(60,State_Stop);
				N: EQU(State_Stop,60)OTE(ServoAxis_Status.Stopped);
		END_ROUTINE

		ROUTINE R06_EStop 
				N: [XIC(S:FS) ,XIO(PML_State.Sts_Aborting) ]MOV(0,State_EStop);
				N: EQU(State_EStop,0)XIC(ServoAxis_CMD.Abort)OTU(MASCommand2.PC)MOV(10,State_EStop);
				N: EQU(State_EStop,10)MUL(ServoAxis.ActualVelocity,2,EstopDecel)[MAS(ServoAxis,MASCommand2,All,Yes,EstopDecel,Units per sec2,Yes,90,% of Time) ,[XIC(MASCommand2.IP) ,XIC(MASCommand2.PC) ] MOV(20,State_EStop) ,XIC(MASCommand2.ER) MOV(30,State_EStop) ];
				N: EQU(State_EStop,20)XIC(MASCommand2.PC)MOV(30,State_EStop);
				N: EQU(State_EStop,30)OTE(ServoAxis_Status.Aborted);
				N: XIC(PML_State.Sts_Aborted)MASD(ServoAxis,Axis_MASD2);
		END_ROUTINE

		ROUTINE R07_Initialize 
				N: [XIC(S:FS) ,XIO(ServoAxis_CMD.Initialize) ]MOV(0,State_Initialize);
				N: EQU(State_Initialize,0)XIC(ServoAxis_CMD.Initialize)MOV(10,State_Initialize);
				N: EQU(State_Initialize,10)[MASD(ServoAxis,Axis_MASD) ,XIC(Axis_MASD.DN) MOV(20,State_Initialize) ];
				N: EQU(State_Initialize,20)[MASR(ServoAxis,Axis_MASR) ,XIC(Axis_MASR.DN) MOV(30,State_Initialize) ];
				N: EQU(State_Initialize,30)[MAFR(ServoAxis,Axis_MAFR) ,XIC(Axis_MAFR.DN) MOV(40,State_Initialize) ];
				N: EQU(State_Initialize,40)[NEQ(ServoAxis.AxisFault,0) MOV(0,State_Initialize) ,EQU(ServoAxis.AxisFault,0) MOV(50,State_Initialize) ];
				N: EQU(State_Initialize,50)[OTE(ServoAxis_Status.Initialized) ,XIO(ServoAxis_CMD.Initialize) MOV(0,State_Initialize) ];
				N: XIC(ClearServoFaults)MAFR(ServoAxis,Axis_MAFR2);
				N: XIC(PML_State.Sts_Aborted)MASD(ServoAxis,Axis_MASD2);
		END_ROUTINE

		CHILD_PROGRAMS
		END_CHILD_PROGRAMS